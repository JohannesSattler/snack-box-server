{"version":3,"sources":["components/Loading/index.jsx","utils/paths.js","utils/consts.js","context/UserContext.js","context/CheckoutContext.js","components/NavLinkIcon.jsx","components/Navbar/Navbar.jsx","config/config.js","utils/userToken.js","services/auth.js","logo.svg","pages/HomePage.jsx","pages/LandingPage.jsx","pages/Signup.jsx","pages/LogIn.jsx","pages/ProtectedPage.jsx","components/ProductCard.js","pages/ProductPage.jsx","pages/ProductDetailPage.jsx","components/SignUpStages/InfoPersonal.jsx","components/SignUpStages/InfoSnacks.jsx","components/Paypal.jsx","components/CheckoutForm.js","components/Stripe.jsx","components/SignUpStages/InfoPayment.jsx","components/SubscriptionCard.js","components/SignUpStages/InfoSubscription.jsx","components/AdressInfo.jsx","components/CheckOut.jsx","pages/SignUpStages.jsx","pages/SubscriptionPage.jsx","pages/SubscriptionDetailPage.jsx","pages/OrdersPage.jsx","components/SnackInfo.jsx","pages/ProfilePage.jsx","pages/CheckoutPage.jsx","config/routes.jsx","App.js","index.js"],"names":["LoadingComponent","className","HOMEPAGE","SIGNUPPAGE","LOGINPAGE","SIGNUPSTAGES","SUBSCRIPTIONS","PRODUCTS","ORDERS","PROFILE","CHECKOUT","ACCESS_TOKEN","APP_NAME","UserContext","toUpperCase","slice","toLowerCase","createContext","UserProvider","props","useState","value","user","setUser","Provider","children","CheckoutContext","CheckoutProvider","checkoutItems","setCheckoutItems","total","setTotal","NavLinkIcon","text","path","Icon","to","style","margin","color","textDecoration","Button","variant","startIcon","size","linkStyle","Navbar","useContext","isInSignUpProcess","setIsInSignUpProcess","anchorElNav","setAnchorElNav","useEffect","signupStage","handleCloseNavMenu","AppBar","position","backgroundColor","filter","Container","maxWidth","Toolbar","disableGutters","PATHS","Typography","noWrap","component","sx","mr","display","xs","md","CardMedia","objectFit","opacity","height","image","alt","Box","flexGrow","IconButton","onClick","event","currentTarget","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","AddBox","Category","LocalShipping","AccountBox","ShoppingCart","handleLogout","Logout","AppRegistration","Login","getUserToken","localStorage","getItem","CONSTS","setUserToken","setItem","internalServerError","err","response","data","errorMessage","status","successStatus","res","authService","axios","create","baseURL","HomePage","LandingPage","Signup","authenticate","email","password","firstName","lastName","form","setForm","error","setError","navigate","useNavigate","handleInputChange","target","name","CssBaseline","marginTop","flexDirection","alignItems","Avatar","m","bgcolor","onSubmit","preventDefault","credentials","post","then","catch","signup","console","message","USER_HELPERS","accessToken","noValidate","mt","TextField","required","fullWidth","label","autoComplete","onChange","autoFocus","marginRight","InputProps","startAdornment","Badge","fontSize","marginLeft","type","Alert","severity","mb","Grid","container","item","Link","href","LogIn","login","log","ProtectedPage","ProductCard","product","_id","brand","sugars","salt","fat","price","Card","width","raised","Divider","CardContent","gutterBottom","Stack","direction","spacing","justifyContent","divider","orientation","flexItem","Chip","float","align","p","ProductPage","products","setProducts","itemCount","setItemCount","index","setIndex","e","a","page","innerText","Number","process","base","length","flexWrap","map","Pagination","count","boundaryCount","hidePrevButton","hideNextButton","gridItemStyle","borderRadius","border","padding","ProductDetailPage","setProduct","params","useParams","get","base_url","fixed","rowSpacing","columnSpacing","sm","src","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Object","keys","nutrtionTable","nutrit","scope","values","toFixed","ingredients","replace","split","ingredient","nutriScore","palmOil","salty","saturatedFat","sweet","vegan","vegetarian","InfoPersonal","city","adressInfo","postalCode","street","houseNumber","additionalInfo","showNameEdit","onFormSubmit","FormControl","InputLabel","Input","defaultValue","InputAdornment","BadgeOutlined","LocationCity","MarkunreadMailbox","EditRoad","House","multiline","maxRows","AddCircle","InfoSnacks","perDay","amountPeople","organic","alignment","setAlignment","nameTemp","handleCheckBoxChange","checked","snackInfo","ToggleButtonGroup","exclusive","newAlignment","ToggleButton","Slider","step","marks","min","max","valueLabelDisplay","FormControlLabel","control","Checkbox","Paypal","setSuccess","ErrorMessage","setOrderID","options","currency","intent","createOrder","actions","purchaseUnits","reference_id","description","title","amount","currency_code","order","purchase_units","application_context","shipping_preference","orderID","onApprove","capture","details","payer","patch","paymentInfo","paypal","layout","shape","tagline","CheckoutForm","stripe","useStripe","elements","useElements","setMessage","isLoading","setIsLoading","clientSecret","URLSearchParams","window","location","search","retrievePaymentIntent","paymentIntent","handleSubmit","confirmPayment","confirmParams","return_url","my","disabled","stripePromise","loadStripe","Stripe","setClientSecret","items","payResponse","appearance","theme","InfoPayment","SubscriptionCard","isActive","setIsActive","subscription","reduce","current","subscriptions","includes","Fab","InfoSubscription","setSubscription","splice","alignSelf","AdressInfo","toggleEdit","setToggleEdit","adress","newData","mx","marginBottom","handleEditSubmit","CheckOut","getSubscriptionData","subsResponse","Paper","minWidth","sub","date","dayOfWeek","resultDate","Date","getTime","setDate","getDate","getDay","toLocaleDateString","getNextDayOfWeek","steps","emptyData","SignUpStages","navigation","activeStep","setActiveStep","handleFormSubmit","Stepper","Step","StepLabel","SubscriptionPage","setSubscriptions","SubscriptionDetailPage","scrollTo","heigh","List","overflow","maxHeight","subheader","prod","borderTop","minHeight","OrdersPage","SnackInfo","px","ProfilePage","CheckoutPage","handlePaymentAprroved","orderArray","forEach","newOrder","packBox","orderOnWay","trackingLink","arrived","push","routes","element","App","delete","headers","Authorization","removeItem","route","createTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"0TA4BeA,EAfU,WAEvB,OACE,qBAAKC,UAAU,UAAf,SACE,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,YACf,qBAAKA,UAAU,YACf,qBAAKA,UAAU,oB,QCrBZC,G,OAAW,KAEXC,EAAa,eACbC,EAAY,cAGZC,EAAe,6BAEfC,EAAgB,iBAGhBC,EAAW,YAGXC,EAAS,UACTC,EAAU,WACVC,EAAW,YChBXC,EAAe,MACtBC,EAAW,YCAXC,GDEJD,EAAS,GAAGE,cAAgBF,EAASG,MAAM,GAAGC,cCF5BC,2BAEpB,SAASC,EAAaC,GAClB,MAAwBC,qBAAxB,mBAEMC,EAAQ,CACVC,KAHJ,KAIIC,QAJJ,MAMA,OACE,cAACV,EAAYW,SAAb,CAAsBH,MAAOA,EAA7B,SACGF,EAAMM,WCXf,IAAMC,EAAkBT,0BAExB,SAASU,EAAiBR,GACtB,MAA0CC,qBAA1C,mBAAOQ,EAAP,KAAsBC,EAAtB,KACA,EAA0BT,mBAAS,GAAnC,mBAEMC,EAAQ,CACVO,gBACAC,mBACAC,MALJ,KAMIC,SANJ,MASA,OACE,cAACL,EAAgBF,SAAjB,CAA0BH,MAAOA,EAAjC,SACGF,EAAMM,W,aCAAO,MAZf,SAAqBb,GACjB,IAAOc,EAAoBd,EAApBc,KAAMC,EAAcf,EAAde,KAAMC,EAAQhB,EAARgB,KAEnB,OACI,cAAC,IAAD,CAAMC,GAAIF,EAAMG,MAAO,CAACC,OAAQ,SAAUC,MAAO,UAAWC,eAAgB,QAA5E,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOC,UAAW,cAACR,EAAD,IAASI,MAAOpB,EAAMoB,OAAS,UAAWtC,UAAU,UAAU2C,KAAMzB,EAAMyB,MAAQ,SAApH,SACKX,O,2KC2BXY,EAAY,CAACN,MAAO,QAASC,eAAgB,QAkPpCM,EAhPA,SAAC3B,GACd,MAAwB4B,qBAAWlC,GAA5BS,EAAP,EAAOA,KACP,GADA,EAAaC,QACqCH,oBAAS,IAA3D,mBAAO4B,EAAP,KAA0BC,EAA1B,KAEA,EAAsC7B,mBAAS,MAA/C,mBAAO8B,EAAP,KAAoBC,EAApB,KAEA,EAAkC/B,mBAAS,GAA3C,6BAEAgC,qBAAU,WACJ9B,GAIDA,EAAK+B,aCpDoB,EDqD1BJ,GAAqB,GAJrBA,GAAqB,KAStB,CAAC3B,IAMJ,IAIMgC,EAAqB,WACzBH,EAAe,OAGjB,OACE,mCACA,cAACI,EAAA,EAAD,CAAQC,SAAS,QAAQnB,MAAO,CAACoB,gBAAiB,UAAWC,OAAQ,mCAArE,SACI,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,EAAA,EAAD,CAASC,gBAAc,EAAvB,UACE,cAAC,IAAD,CAAM1B,GAAKY,EAAqCe,EAAjBA,EAAqC1B,MAAOQ,EAA3E,SACE,eAACmB,EAAA,EAAD,CACEtB,QAAQ,KACRuB,QAAM,EACNC,UAAU,MACVC,GAAI,CAAEC,GAAI,EAAGC,QAAS,CAAEC,GAAI,OAAQC,GAAI,QAAUhC,MAAO,QAJ3D,UAMA,cAACiC,EAAA,EAAD,CACEN,UAAU,MACV7B,MAAO,CAACoC,UAAW,UAAWC,QAAS,KACvCC,OAAO,KACPC,MAAO,qBACPC,IAAI,kBAXN,iBAiBF,eAACC,EAAA,EAAD,CAAKX,GAAI,CAAEY,SAAU,EAAGV,QAAS,CAAEC,GAAI,OAAQC,GAAI,QAAUhC,MAAO,SAApE,UACE,cAACyC,EAAA,EAAD,CACEpC,KAAK,QACL,aAAW,0BACX,gBAAc,cACd,gBAAc,OACdqC,QArCY,SAACC,GACzB/B,EAAe+B,EAAMC,gBAqCT5C,MAAM,UANR,SAQE,cAAC,IAAD,MAGF,cAAC,IAAD,CACE6C,GAAG,cACHC,SAAUnC,EACVoC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,aAAW,EACXC,gBAAiB,CACfH,SAAU,MACVC,WAAY,QAEdG,KAAMC,QAAQ1C,GACd2C,QAASvC,EACTa,GAAI,CACFE,QAAS,CAAEC,GAAI,QAASC,GAAI,SAfhC,SAoBCvB,EA6CI,cAAC8B,EAAA,EAAD,IA3CH,eAACA,EAAA,EAAD,WACE,cAACgB,EAAA,EAAD,CAAUb,QAAS3B,EAAnB,SACE,cAAC,EAAD,CAAarB,KAAM,gBAAiBC,KAAM6B,EAAqB5B,KAAM4D,QAEvE,cAACD,EAAA,EAAD,CAAUb,QAAS3B,EAAnB,SACE,cAAC,EAAD,CAAarB,KAAM,WAAYC,KAAM6B,EAAgB5B,KAAM6D,QAG5D1E,EACC,qCACE,cAACwE,EAAA,EAAD,CAAUb,QAAS3B,EAAnB,SACE,cAAC,EAAD,CAAarB,KAAM,cAAeC,KAAM6B,EAAc5B,KAAM8D,QAE9D,cAACH,EAAA,EAAD,CAAUb,QAAS3B,EAAnB,SACE,cAAC,EAAD,CAAarB,KAAM,UAAWC,KAAM6B,EAAe5B,KAAM+D,QAE3D,cAACJ,EAAA,EAAD,CAAUb,QAAS3B,EAAnB,SACE,cAAC,EAAD,CAAarB,KAAM,WAAYC,KAAM6B,EAAgBxB,MAAO,OAAQJ,KAAMgE,QAE5E,cAACL,EAAA,EAAD,CAAUb,QAAS3B,EAAnB,SACE,cAACb,EAAA,EAAD,CACEC,QAAQ,WACRuC,QAAS,kBAAM9D,EAAMiF,gBACrB7D,MAAM,QACNI,UAAW,cAAC0D,EAAA,EAAD,IAJb,0BAWF,eAACvB,EAAA,EAAD,WACE,cAACgB,EAAA,EAAD,UACE,cAAC,EAAD,CAAa7D,KAAM,UAAWC,KAAM6B,EAAkBxB,MAAO,UAAWJ,KAAMmE,QAEhF,cAACR,EAAA,EAAD,UACE,cAAC,EAAD,CAAa7D,KAAM,QAASC,KAAM6B,EAAiBxB,MAAO,UAAWJ,KAAMoE,mBAazF,cAACvC,EAAA,EAAD,CACEtB,QAAQ,KACRuB,QAAM,EACNC,UAAU,MACVC,GAAI,CAAEY,SAAU,EAAGV,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAJhD,SAME,cAAC,IAAD,CAAMnC,GAAKY,EAAqCe,EAAjBA,EAAqC1B,MAAO,CAACE,MAAO,OAAQC,eAAgB,QAA3G,yBAKF,cAACsC,EAAA,EAAD,CAAMX,GAAI,CAAEY,SAAU,EAAGV,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAApD,SACGjD,EACC,cAACmB,EAAA,EAAD,CACIC,QAAQ,WACRuC,QAAS,kBAAM9D,EAAMiF,gBACrB7D,MAAM,QACNK,KAAM,QACND,UAAW,cAAC0D,EAAA,EAAD,MAMf,cAAC,EAAD,CAAapE,KAAM,QAASC,KAAM6B,EAAiBxB,MAAO,UAAWJ,KAAMoE,QAkB5EvD,EAQI,6BANH,mCACE,eAAC8B,EAAA,EAAD,CAAKX,GAAI,CAAEY,SAAU,EAAGV,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAAnD,UACE,cAAC,EAAD,CAAatC,KAAM,gBAAiBC,KAAM6B,EAAoB5B,KAAM4D,MACpE,cAAC,EAAD,CAAa9D,KAAM,WAAYC,KAAM6B,EAAgB5B,KAAM6D,WAOjEhD,EAEE,mCACE,cAAC8B,EAAA,EAAD,CAAKX,GAAI,CAAEY,SAAU,EAAGV,QAAS,CAAEC,GAAI,OAAQC,GAAI,aAIlD,6BAGP,cAACO,EAAA,EAAD,CAAKX,GAAI,CAAEY,SAAU,EAAGV,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAAnD,SACCjD,EACG,qCAEG0B,EAMI,6BALH,qCACE,cAAC,EAAD,CAAaf,KAAM,cAAeC,KAAM6B,EAAc5B,KAAM8D,MAC5D,cAAC,EAAD,CAAahE,KAAM,UAAWC,KAAM6B,EAAe5B,KAAM+D,MACzD,cAAC,EAAD,CAAajE,KAAM,WAAYC,KAAM6B,EAAgBxB,MAAO,OAAQJ,KAAMgE,SAKhF,cAAC1D,EAAA,EAAD,CACEC,QAAQ,WACRuC,QAAS,kBAAM9D,EAAMiF,gBACrB7D,MAAM,QACNI,UAAW,cAAC0D,EAAA,EAAD,IAJb,wBAUA,qCACE,cAAC,EAAD,CAAapE,KAAM,UAAWC,KAAM6B,EAAkBxB,MAAO,UAAWJ,KAAMmE,MAC9E,cAAC,EAAD,CAAarE,KAAM,QAASC,KAAM6B,EAAiBxB,MAAO,UAAWJ,KAAMoE,qB,iBEzQtF,SAASC,IACd,OAAOC,aAAaC,QAAQC,GAGvB,SAASC,EAAavF,GAC3B,OAAOoF,aAAaI,QAAQF,EAAqBtF,GCHnD,SAASyF,GAAoBC,GAC3B,OAAIA,EAAIC,UAAYD,EAAIC,SAASC,MAAQF,EAAIC,SAASC,KAAKC,aAClD,CACLC,QAAQ,EACRD,aAAcH,EAAIC,SAASC,KAAKC,cAG7B,CACLC,QAAQ,EACRD,aAAc,mDAIlB,SAASE,GAAcC,GACrB,MAAO,CACLF,QAAQ,EACRF,KAAMI,EAAIJ,MAKd,IAAMK,GAAcC,IAAMC,OAAO,CAC/BC,QAAQ,mC,aC1BK,I,OCWAC,OARf,WACE,OACE,qBAAKzH,UAAU,MAAf,SACE,8CCIS0H,OARf,WACI,OACI,8BACI,iD,uFCgBG,SAASC,GAAT,GAAmC,IAAjBC,EAAgB,EAAhBA,aAC/B,EAAwBzG,mBAAS,CAC/B0G,MAAO,GACPC,SAAU,GACVC,UAAW,GACXC,SAAU,KAJZ,mBAAOC,EAAP,KAAaC,EAAb,KAMQL,EAAyCI,EAAzCJ,MAAOC,EAAkCG,EAAlCH,SAAUC,EAAwBE,EAAxBF,UAAWC,EAAaC,EAAbD,SACpC,EAA0B7G,mBAAS,MAAnC,mBAAOgH,EAAP,KAAcC,EAAd,KACMC,EAAWC,cAEjB,SAASC,EAAkBtD,GACzB,MAAwBA,EAAMuD,OAAtBC,EAAR,EAAQA,KAAMrH,EAAd,EAAcA,MACd,OAAO8G,EAAQ,6BAAKD,GAAN,mBAAaQ,EAAOrH,KAkCpC,OACI,mCACA,eAACsC,EAAA,EAAD,CAAWO,UAAU,OAAON,SAAS,KAArC,UACE,cAAC+E,GAAA,EAAD,IACA,eAAC7D,EAAA,EAAD,CACEX,GAAI,CACFyE,UAAW,EACXvE,QAAS,OACTwE,cAAe,SACfC,WAAY,UALhB,UAQE,cAACC,GAAA,EAAD,CAAQ5E,GAAI,CAAE6E,EAAG,EAAGC,QAAS,UAG7B,cAACjF,EAAA,EAAD,CAAYE,UAAU,KAAKxB,QAAQ,KAAnC,qBAGA,eAACoC,EAAA,EAAD,CAAKZ,UAAU,OAAOgF,SAjD9B,SAA8BhE,GAC5BA,EAAMiE,iBJSH,SAAgBC,GACrB,OAAO9B,GACJ+B,KAAK,UAAWD,GAChBE,KAAKlC,IACLmC,MAAMzC,IILP0C,CAPoB,CAClB1B,QACAC,WACAC,YACAC,aAGkBqB,MAAK,SAACjC,GACxB,IAAKA,EAAIF,OAGP,OADAsC,QAAQrB,MAAM,4BAA6Bf,EAAIH,cACxCmB,EAAS,CACdqB,QAASrC,EAAIH,eAKjByC,EAA0BtC,EAAIJ,KAAK2C,aACnC/B,EAAaR,EAAIJ,KAAK3F,MAEnB+F,EAAIJ,KAAK3F,MAAQ+F,EAAIJ,KAAK3F,KAAK+B,YN3DR,EM4DxBiF,EAAS,8BAGTA,EAASvE,OAuB+C8F,YAAU,EAAC1F,GAAI,CAAE2F,GAAI,GAA3E,UACE,eAAChF,EAAA,EAAD,CAAKzC,MAAO,CAACgC,QAAS,QAAtB,UACE,cAAC0F,GAAA,EAAD,CACEzH,OAAO,QACP0H,UAAQ,EACRC,WAAS,EACT7E,GAAG,YACH8E,MAAM,aACNxB,KAAK,YACLyB,aAAa,YACbzH,QAAQ,WACR0H,SAAU5B,EACV6B,WAAS,EACThI,MAAO,CAACiI,YAAa,GACrBC,WAAY,CACVC,eAAgB,cAACC,GAAA,EAAD,CAAOC,SAAS,QAAQnI,MAAM,SAAS4B,GAAI,CAACC,GAAI,QAGpE,cAAC2F,GAAA,EAAD,CACEzH,OAAO,QACP0H,UAAQ,EACRC,WAAS,EACT7E,GAAG,WACH8E,MAAM,YACNxB,KAAK,WACLyB,aAAa,WACbC,SAAU5B,EACVnG,MAAO,CAACsI,WAAY,QAGxB,cAACZ,GAAA,EAAD,CACEzH,OAAO,QACP0H,UAAQ,EACRC,WAAS,EACT7E,GAAG,QACH8E,MAAM,gBACNxB,KAAK,QACLyB,aAAa,QACbC,SAAU5B,IAEZ,cAACuB,GAAA,EAAD,CACEzH,OAAO,QACP0H,UAAQ,EACRC,WAAS,EACTvB,KAAK,WACLwB,MAAM,WACNU,KAAK,WACLxF,GAAG,WACHgF,SAAU5B,EACV2B,aAAa,qBAEd/B,GACC,cAACyC,GAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyB1C,EAAMsB,UAQjC,cAACjH,EAAA,EAAD,CACEmI,KAAK,SACLX,WAAS,EACTvH,QAAQ,YACRyB,GAAI,CAAE2F,GAAI,EAAGiB,GAAI,GAJnB,qBAQA,cAACC,GAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,GAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACC,GAAA,EAAD,CAAMC,KAAK,IAAI1I,QAAQ,QAAvB,SACG,mDC1IJ,SAAS2I,GAAT,GAAkC,IAAjBxD,EAAgB,EAAhBA,aAC9B,EAAwBzG,mBAAS,CAC/B0G,MAAO,GACPC,SAAU,KAFZ,mBAAOG,EAAP,KAAaC,EAAb,KAKQL,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SACf,EAA0B3G,mBAAS,MAAnC,mBAAOgH,EAAP,KAAcC,EAAd,KACMC,EAAWC,cAEjB,SAASC,EAAkBtD,GACzB,MAAuBA,EAAMuD,OAArBC,EAAR,EAAQA,KAAMrH,EAAd,EAAcA,MAEd,OAAO8G,EAAQ,6BAAKD,GAAN,mBAAaQ,EAAOrH,KAoCpC,OACI,mCACA,eAACsC,EAAA,EAAD,CAAWO,UAAU,OAAON,SAAS,KAArC,UACE,cAAC+E,GAAA,EAAD,IACA,eAAC7D,EAAA,EAAD,CACEX,GAAI,CACFyE,UAAW,EACXvE,QAAS,OACTwE,cAAe,SACfC,WAAY,UALhB,UAQE,cAACC,GAAA,EAAD,CAAQ5E,GAAI,CAAE6E,EAAG,EAAGC,QAAS,UAG7B,cAACjF,EAAA,EAAD,CAAYE,UAAU,KAAKxB,QAAQ,KAAnC,qBAGA,eAACoC,EAAA,EAAD,CAAKZ,UAAU,OAAOgF,SAnD9B,SAA8BhE,GAC5BA,EAAMiE,iBLPH,SAAeC,GACpB,OAAO9B,GACJ+B,KAAK,SAAUD,GACfE,KAAKlC,IACLmC,MAAMzC,IKSPwE,CALoB,CAClBxD,QACAC,aAGiBuB,MAAK,SAACjC,GACvB,IAAKA,EAAIF,OACP,OAAOkB,EAAS,CAAEqB,QAASrC,EAAIH,eAKjC,GAHAyC,EAA0BtC,EAAIJ,KAAK2C,aACnC/B,EAAaR,EAAIJ,KAAK3F,MAEnB+F,EAAIJ,KAAK3F,MAAQ+F,EAAIJ,KAAK3F,KAAK+B,YPjDR,EOiD+C,CACvEoG,QAAQ8B,IAAIlE,EAAIJ,KAAK3F,KAAK+B,aAO1BoG,QAAQ8B,IAAI,uBACZjD,EAAS,WAPS,CAChB,EAAG,uBACH,EAAG,oBACH,EAAG,sBACH,EAAG,4BAG2BjB,EAAIJ,KAAK3F,KAAK+B,mBAG9CiF,EAASvE,OAyB+C8F,YAAU,EAAC1F,GAAI,CAAE2F,GAAI,GAA3E,UACE,cAACC,GAAA,EAAD,CACEzH,OAAO,SACP0H,UAAQ,EACRC,WAAS,EACT7E,GAAG,QACH8E,MAAM,gBACNxB,KAAK,QACLyB,aAAa,QACb9I,MAAOyG,EACPsC,SAAU5B,EACV6B,WAAS,IAEX,cAACN,GAAA,EAAD,CACEzH,OAAO,SACP0H,UAAQ,EACRC,WAAS,EACTvB,KAAK,WACLwB,MAAM,WACNU,KAAK,WACLxF,GAAG,WACH/D,MAAO0G,EACPqC,SAAU5B,EACV2B,aAAa,qBAEd/B,GACC,cAACyC,GAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyB1C,EAAMsB,UAQjC,cAACjH,EAAA,EAAD,CACEmI,KAAK,SACLX,WAAS,EACTvH,QAAQ,YACRyB,GAAI,CAAE2F,GAAI,EAAGiB,GAAI,GAJnB,oBAQA,eAACC,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,GAAA,EAAD,CAAME,MAAI,EAAC5G,IAAE,EAAb,SACE,cAAC6G,GAAA,EAAD,CAAMC,KAAK,IAAI1I,QAAQ,QAAvB,gCAIF,cAACsI,GAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACC,GAAA,EAAD,CAAMC,KAAK,IAAI1I,QAAQ,QAAvB,SACG,mDCtInB,IAQe8I,GARO,WACpB,OACE,8BACE,kE,+EC8ESC,OArEf,SAAqBtK,GACjB,MAA4DA,EAAMuK,QAA3DC,EAAP,EAAOA,IAAKjD,EAAZ,EAAYA,KAAMkD,EAAlB,EAAkBA,MAAOhH,EAAzB,EAAyBA,MAAOiH,EAAhC,EAAgCA,OAAQC,EAAxC,EAAwCA,KAAMC,EAA9C,EAA8CA,IAAKC,EAAnD,EAAmDA,MAEnD,OACI,eAACC,GAAA,EAAD,CAAM9H,GAAI,CAAE+H,MAAO,IAAK5J,OAAQ,QAAS6J,QAAQ,EAAjD,UACI,cAAC3H,EAAA,EAAD,CACIN,UAAU,MACV7B,MAAO,CAACoC,UAAW,WACnBE,OAAO,MACPC,MAAOA,EACPC,IAAK6D,IAET,cAAC0D,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,WACI,cAACrI,EAAA,EAAD,CAAYsI,cAAY,EAACrI,QAAQ,EAAMvB,QAAQ,KAAKwB,UAAU,MAA9D,SACKwE,IAEL,cAAC1E,EAAA,EAAD,CAAYtB,QAAQ,QAAQH,MAAM,iBAAlC,SACKqJ,IAGL,eAACW,GAAA,EAAD,CACAC,UAAU,MACVC,QAAS,EACTpK,MAAO,CAACqK,eAAgB,eAAgB9D,UAAW,IACnD+D,QAAS,cAACP,GAAA,EAAD,CAASQ,YAAY,WAAWC,UAAQ,IAJjD,UAMgB,QAAXhB,EACG,cAACiB,GAAA,EAAD,CAAM5C,MAAO,QAAS3H,MAAM,UAAUG,QAAQ,aACnC,aAAXmJ,EACA,cAACiB,GAAA,EAAD,CAAM5C,MAAO,QAAS3H,MAAM,UAAUG,QAAQ,aAE9C,cAACoK,GAAA,EAAD,CAAM5C,MAAO,QAAS3H,MAAM,QAAQG,QAAQ,aAGtC,QAAToJ,EACG,cAACgB,GAAA,EAAD,CAAM5C,MAAO,OAAQ3H,MAAM,UAAUG,QAAQ,aACpC,aAAToJ,EACA,cAACgB,GAAA,EAAD,CAAM5C,MAAO,OAAQ3H,MAAM,UAAUG,QAAQ,aAE7C,cAACoK,GAAA,EAAD,CAAM5C,MAAO,OAAQ3H,MAAM,QAAQG,QAAQ,aAGtC,QAARqJ,EACG,cAACe,GAAA,EAAD,CAAM5C,MAAO,MAAO3H,MAAM,UAAUG,QAAQ,aACpC,aAARqJ,EACA,cAACe,GAAA,EAAD,CAAM5C,MAAO,MAAO3H,MAAM,UAAUG,QAAQ,aAE5C,cAACoK,GAAA,EAAD,CAAM5C,MAAO,MAAO3H,MAAM,QAAQG,QAAQ,gBAIlD,cAAC0J,GAAA,EAAD,CAAS/J,MAAO,CAACC,OAAQ,WACzB,cAAC,IAAD,CAAMF,GAAI,aAAeuJ,EAAKtJ,MAAO,CAACG,eAAgB,QAAtD,SACI,cAACC,EAAA,EAAD,CACAC,QAAQ,WACRL,MAAO,CAAC0K,MAAO,QAASzK,OAAQ,SAFhC,wBAOJ,eAAC0B,EAAA,EAAD,CAAYtB,QAAQ,KAAKsK,MAAM,OAAOzK,MAAM,iBAAiB4B,GAAI,CAAC2F,GAAI,EAAGmD,EAAG,GAA5E,UACKjB,EADL,oB,UCNDkB,OA9Df,WACI,MAAgC9L,mBAAS,IAAzC,mBAAO+L,EAAP,KAAiBC,EAAjB,KACA,EAAkChM,mBAAS,GAA3C,mBAAOiM,EAAP,KAAkBC,EAAlB,KACA,EAA0BlM,mBAAS,GAAnC,mBAAOmM,EAAP,KAAcC,EAAd,KAHmB,8CAenB,WAAoCC,GAApC,kBAAAC,EAAA,6DACIN,EAAY,IACNO,EAAOF,EAAEhF,OAAOmF,UACtBJ,EAASK,OAAOF,IACHG,uCAJjB,SAK2BvG,IAAM8B,KAAK0E,gDAAoB,CAACJ,SAL3D,OAKU3G,EALV,OAMIyC,QAAQ8B,IAAIvE,GACZoG,EAAYpG,EAASC,KAAKkG,UAP9B,4CAfmB,sBAyBnB,OApBA/J,qBAAU,WACN,wBAAC,6BAAAsK,EAAA,4DACgBI,uCADhB,SAE0BvG,IAAM8B,KAAK0E,gDAAoB,CAACJ,KAAM,IAFhE,OAES3G,EAFT,OAGGyC,QAAQ8B,IAAIvE,GACZoG,EAAYpG,EAASC,KAAKkG,UAC1BG,EAAatG,EAASC,KAAKoG,WAL9B,0CAAD,KAOD,IAYCF,EAASa,OAKT,eAAClJ,EAAA,EAAD,WACI,qBACAzC,MAAO,CACCgC,QAAS,OACT4J,SAAU,OACVvB,eAAgB,SAChB5D,WAAY,aACZoD,MAAO,MACP5J,OAAQ,SACRqC,OAAQ,QARhB,SAYQwI,EAASe,KAAI,SAAAxC,GACT,OAAO,cAAC,GAAD,CAA+BA,QAASA,GAAtBA,EAAQC,UAK7C,cAACwC,GAAA,EAAD,CACAC,MAAOf,EACPgB,cAAe,EACfjE,SApDW,4CAqDXuD,KAAMJ,EACNhL,MAAM,UACN+L,gBAAc,EACdC,gBAAc,EACdlM,MAAO,CAACoB,gBAAiB,cAAenB,OAAQ,aA/B7C,cAAC,EAAD,K,4DChBTkM,GAAgB,CAACC,aAAc,MAAOC,OAAQ,oBAAqBC,QAAS,QAiJnEC,OA/If,WACI,MAA8BxN,mBAAS,MAAvC,mBAAOsK,EAAP,KAAgBmD,EAAhB,KACMC,EAASC,cAWf,OATA3L,qBAAU,WACN,wBAAC,6BAAAsK,EAAA,4DACoBI,uCADpB,SAE0BvG,IAAMyH,IAAIC,iDAA0BH,EAAO1J,IAFrE,OAES4B,EAFT,OAGGyC,QAAQ8B,IAAIvE,EAASC,MACrB4H,EAAW7H,EAASC,MAJvB,0CAAD,KAMD,IAECyE,EAKA,cAAC/H,EAAA,EAAD,CAAWuL,OAAK,EAAC7M,MAAO,CAACoB,gBAAiB,UAAWkL,QAAS,QAA9D,SACI,eAAC3D,GAAA,EAAD,CAAMC,WAAS,EAACkE,WAAY,EAAGC,cAAe,CAAE9K,GAAI,EAAG+K,GAAI,EAAG9K,GAAI,GAAlE,UAEI,cAACyG,GAAA,EAAD,CAAME,MAAI,EAAC3G,GAAI,EAAGlC,MAAO,CAACoB,gBAAiB,QAASgL,aAAc,QAAlE,SACI,qBAAKa,IAAK5D,EAAQ9G,MAAOC,IAAK6G,EAAQhD,SAG1C,eAACsC,GAAA,EAAD,CAAME,MAAI,EAAC3G,GAAI,EAAGlC,MAAOmM,GAAzB,UACI,cAACxK,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,KAAKwB,UAAU,KAAhD,6BAGA,uBAAK,uBACL,cAACF,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,KAAKwB,UAAU,KAAhD,SACKwH,EAAQhD,OAEb,uBACA,cAAC1E,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,YAAYwB,UAAU,KAAvD,SACKwH,EAAQE,QAEb,uBAAK,uBAEL,eAAC5H,EAAA,EAAD,CAAYtB,QAAQ,KAAKsK,MAAM,QAAQzK,MAAM,iBAAiB4B,GAAI,CAAC6E,EAAG,GAAtE,UACK0C,EAAQM,MADb,gBAMJ,eAAChB,GAAA,EAAD,CAAME,MAAI,EAAC3G,GAAI,EAAGlC,MAAOmM,GAAzB,UACI,cAACxK,EAAA,EAAD,CAAYtB,QAAQ,KAAKwB,UAAU,KAAnC,6BAGA,cAACqL,GAAA,EAAD,CAAgBlN,MAAO,CAACoB,gBAAiB,UAAWgL,aAAc,QAAlE,SACI,eAACe,GAAA,EAAD,CAAO,aAAW,eAAlB,UACI,cAACC,GAAA,EAAD,UACA,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,CAAW3C,MAAM,SAAjB,mBACA,cAAC2C,GAAA,EAAD,CAAW3C,MAAM,SAAjB,uBAGJ,cAAC4C,GAAA,EAAD,UAEQC,OAAOC,KAAKpE,EAAQqE,eAAe7B,KAAI,SAAC8B,EAAQzC,GAC5C,GAAGA,EAAQ,IAAM,EACjB,OACI,eAACmC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAWzL,UAAU,KAAK+L,MAAM,MAAhC,SACMJ,OAAOC,KAAKpE,EAAQqE,eAAexC,EAAM,KAE/C,cAACoC,GAAA,EAAD,CAAW3C,MAAM,SAAjB,SAEQ6C,OAAOK,OAAOxE,EAAQqE,eAAexC,EAAM,GAAG4C,QAAQ,KAG9D,cAACR,GAAA,EAAD,CAAW3C,MAAM,SAAjB,SACMtB,EAAQqE,cAAcC,OAVjBA,EAASzC,gBAsBpD,eAACvC,GAAA,EAAD,CAAME,MAAI,EAAC3G,GAAI,EAAGlC,MAAOmM,GAAzB,UACI,cAACxK,EAAA,EAAD,CAAYtB,QAAQ,KAAKwB,UAAU,KAAnC,yBAIIwH,EAAQ0E,YACPC,QAAQ,cAAe,KACvBC,MAAM,KACNpC,KAAI,SAACqC,EAAYhD,GACd,OACI,cAACT,GAAA,EAAD,CAA+B5C,MAAOqG,EAAYhO,MAAM,UAAUF,MAAO,CAACC,OAAQ,IAAvEiO,EAAahD,SAMxC,eAACvC,GAAA,EAAD,CAAME,MAAI,EAAC3G,GAAI,EAAGlC,MAAOmM,GAAzB,UACI,cAACxK,EAAA,EAAD,CAAYtB,QAAQ,KAAKwB,UAAU,KAAnC,mBAGA,cAACF,EAAA,EAAD,CAAYtB,QAAQ,YAAYwB,UAAU,KAA1C,SACI,cAAC4I,GAAA,EAAD,CAAM5C,MAAO,QAAUwB,EAAQK,IAAKxJ,MAAM,UAAUF,MAAO,CAACC,OAAQ,OAExE,cAAC0B,EAAA,EAAD,CAAYtB,QAAQ,YAAYwB,UAAU,KAA1C,SACI,cAAC4I,GAAA,EAAD,CAAM5C,MAAO,gBAAkBwB,EAAQ8E,WAAYjO,MAAM,UAAUF,MAAO,CAACC,OAAQ,OAEvF,cAAC0B,EAAA,EAAD,CAAYtB,QAAQ,YAAYwB,UAAU,KAA1C,SAEI,cAAC4I,GAAA,EAAD,CAAM5C,MAAO,qBAAuBwB,EAAQ+E,QAASlO,MAAM,UAAUF,MAAO,CAACC,OAAQ,OAEzF,cAAC0B,EAAA,EAAD,CAAYtB,QAAQ,YAAYwB,UAAU,KAA1C,SACI,cAAC4I,GAAA,EAAD,CAAM5C,MAAO,SAAWwB,EAAQI,KAAMvJ,MAAM,UAAUF,MAAO,CAACC,OAAQ,OAE1E,cAAC0B,EAAA,EAAD,CAAYtB,QAAQ,YAAYwB,UAAU,KAA1C,SACI,cAAC4I,GAAA,EAAD,CAAM5C,MAAO,UAAYwB,EAAQgF,MAAOnO,MAAM,UAAUF,MAAO,CAACC,OAAQ,OAE5E,cAAC0B,EAAA,EAAD,CAAYtB,QAAQ,YAAYwB,UAAU,KAA1C,SACI,cAAC4I,GAAA,EAAD,CAAM5C,MAAO,kBAAoBwB,EAAQiF,aAAcpO,MAAM,UAAUF,MAAO,CAACC,OAAQ,OAE3F,cAAC0B,EAAA,EAAD,CAAYtB,QAAQ,YAAYwB,UAAU,KAA1C,SACI,cAAC4I,GAAA,EAAD,CAAM5C,MAAO,WAAawB,EAAQG,OAAQtJ,MAAM,UAAUF,MAAO,CAACC,OAAQ,OAE9E,cAAC0B,EAAA,EAAD,CAAYtB,QAAQ,YAAYwB,UAAU,KAA1C,SACI,cAAC4I,GAAA,EAAD,CAAM5C,MAAO,UAAYwB,EAAQkF,MAAOrO,MAAM,UAAUF,MAAO,CAACC,OAAQ,OAE5E,cAAC0B,EAAA,EAAD,CAAYtB,QAAQ,YAAYwB,UAAU,KAA1C,SACI,cAAC4I,GAAA,EAAD,CAAM5C,MAAO,UAAYwB,EAAQmF,MAAOtO,MAAM,UAAUF,MAAO,CAACC,OAAQ,OAE5E,cAAC0B,EAAA,EAAD,CAAYtB,QAAQ,YAAYwB,UAAU,KAA1C,SACI,cAAC4I,GAAA,EAAD,CAAM5C,MAAO,eAAiBwB,EAAQoF,WAAYvO,MAAM,UAAUF,MAAO,CAACC,OAAQ,eAxH3F,cAAC,EAAD,K,4IC2LAyO,OAtNf,SAAsB5P,GACCoH,cADO,IAAD,oBAEzB,EAAwBxF,qBAAWlC,GAA5BS,EAAP,EAAOA,KAEP,GAFA,EAAaC,QAEWH,mBAAS,CAC7B4G,UAAS,OAAE1G,QAAF,IAAEA,OAAF,EAAEA,EAAM0G,UACjBC,SAAQ,OAAE3G,QAAF,IAAEA,OAAF,EAAEA,EAAM2G,SAChB+I,KAAI,UAAE1P,EAAK2P,kBAAP,aAAE,EAAiBD,KACvBE,WAAU,UAAE5P,EAAK2P,kBAAP,aAAE,EAAiBC,WAC7BC,OAAM,UAAE7P,EAAK2P,kBAAP,aAAE,EAAiBE,OACzBC,YAAW,UAAE9P,EAAK2P,kBAAP,aAAE,EAAiBG,YAC9BC,eAAc,UAAE/P,EAAK2P,kBAAP,aAAE,EAAiBI,kBAPrC,mBAAOnJ,EAAP,KAAaC,EAAb,KAUA,EAA0B/G,qBAA1B,mBAAOgH,EAAP,KAAcC,EAAd,KAEA,SAASG,EAAkBtD,GACvB,MAAwBA,EAAMuD,OAAtBC,EAAR,EAAQA,KAAMrH,EAAd,EAAcA,MAEd,OADAgH,IACOF,EAAQ,6BAAKD,GAAN,mBAAaQ,EAAOrH,KAnBb,8CAsBzB,WAAgCoM,GAAhC,UAAAC,EAAA,yDACQxF,EAAK8I,MAAS9I,EAAKgJ,YAAehJ,EAAKiJ,QAAWjJ,EAAKkJ,YAD/D,uBAEQ/I,EAAS,sCAFjB,0BAMOlH,EAAMmQ,aACLnQ,EAAMoQ,aAAa9D,EAAG,CAClBpK,YAAa,GACb2E,UAAWE,EAAKF,UAChBC,SAAUC,EAAKD,SACfgJ,WAAY/I,IAIhB/G,EAAMoQ,aAAa9D,EAAG,CAACpK,YAAa,GAAI4N,WAAY/I,IAf5D,4CAtByB,sBAyCzB,OACI,qCACI,cAAClE,EAAA,EAAD,CAAYgJ,MAAM,SAAStK,QAAQ,QAAQ4J,cAAY,EAAvD,gCAGA,eAACtB,GAAA,EAAD,CAAMC,WAAS,EAACwB,QAAS,EAAzB,UAEQtL,EAAMmQ,cACF,mCACA,eAACtG,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,GAAf,UACI,eAACkN,GAAA,EAAD,CAAa9O,QAAQ,WAAWL,MAAO,CAACC,OAAQ,QAAhD,UACI,cAACmP,GAAA,EAAD,yBAGA,cAACC,GAAA,EAAD,CACAC,aAAY,OAAErQ,QAAF,IAAEA,OAAF,EAAEA,EAAM0G,UACpBqC,WAAS,EACTD,SAAU5B,EACV0B,MAAM,aACNxB,KAAK,YACL8B,eACI,cAACoH,GAAA,EAAD,CAAgBpO,SAAS,QAAzB,SACI,cAACiH,GAAA,EAAD,CAAOC,SAAS,kBAK5B,eAAC8G,GAAA,EAAD,CAAa9O,QAAQ,WAAWL,MAAO,CAACC,OAAQ,QAAhD,UACI,cAACmP,GAAA,EAAD,wBAGA,cAACC,GAAA,EAAD,CACAC,aAAY,OAAErQ,QAAF,IAAEA,OAAF,EAAEA,EAAM2G,SACpBrF,KAAK,QACLwH,SAAU5B,EACV0B,MAAM,YACNxB,KAAK,WACL8B,eACI,cAACoH,GAAA,EAAD,CAAgBpO,SAAS,QAAzB,SACI,cAACqO,GAAA,EAAD,CAAenH,SAAS,kBAMpC,cAAC0B,GAAA,EAAD,SAKZ,eAACpB,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,GAAf,UACI,eAACkN,GAAA,EAAD,CAAa9O,QAAQ,WAAWL,MAAO,CAACC,OAAQ,QAAhD,UACI,cAACmP,GAAA,EAAD,CAAYpP,MAAO,CAACE,MAAO,aAA3B,oBAGA,cAACmP,GAAA,EAAD,CACAC,aAAY,UAAErQ,EAAK2P,kBAAP,aAAE,EAAiBD,KAC/BpO,KAAK,QACLyH,WAAS,EACTL,UAAQ,EACRI,SAAU5B,EACV0B,MAAM,OACNxB,KAAK,OACL8B,eACI,cAACoH,GAAA,EAAD,CAAgBpO,SAAS,QAAzB,SACI,cAACsO,GAAA,EAAD,CAAcpH,SAAS,kBAKnC,eAAC8G,GAAA,EAAD,CAAa9O,QAAQ,WAAWL,MAAO,CAACC,OAAQ,QAAhD,UACI,cAACmP,GAAA,EAAD,CAAYpP,MAAO,CAACE,MAAO,aAA3B,2BAGA,cAACmP,GAAA,EAAD,CACAC,aAAY,UAAErQ,EAAK2P,kBAAP,aAAE,EAAiBC,WAC/BlH,UAAQ,EACRI,SAAU5B,EACV0B,MAAM,cACNxB,KAAK,aACL8B,eACI,cAACoH,GAAA,EAAD,CAAgBpO,SAAS,QAAzB,SACI,cAACuO,GAAA,EAAD,CAAmBrH,SAAS,qBAQ5C,eAACM,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,GAAf,UACI,eAACkN,GAAA,EAAD,CAAa9O,QAAQ,WAAWL,MAAO,CAACC,OAAQ,QAAhD,UACI,cAACmP,GAAA,EAAD,CAAYpP,MAAO,CAACE,MAAO,aAA3B,sBAGA,cAACmP,GAAA,EAAD,CACAC,aAAY,UAAErQ,EAAK2P,kBAAP,aAAE,EAAiBE,OAC/BnH,UAAQ,EACRI,SAAU5B,EACV0B,MAAM,SACNxB,KAAK,SACL8B,eACI,cAACoH,GAAA,EAAD,CAAgBpO,SAAS,QAAzB,SACI,cAACwO,GAAA,EAAD,CAAUtH,SAAS,kBAM/B,eAAC8G,GAAA,EAAD,CAAa9O,QAAQ,WAAWL,MAAO,CAACC,OAAQ,QAAhD,UACI,cAACmP,GAAA,EAAD,CAAYpP,MAAO,CAACE,MAAO,aAA3B,4BAGA,cAACmP,GAAA,EAAD,CACAC,aAAY,UAAErQ,EAAK2P,kBAAP,aAAE,EAAiBG,YAC/BpH,UAAQ,EACRI,SAAU5B,EACV0B,MAAM,eACNxB,KAAK,cACL8B,eACI,cAACoH,GAAA,EAAD,CAAgBpO,SAAS,QAAzB,SACI,cAACyO,GAAA,EAAD,CAAOvH,SAAS,qBAOhC,cAACM,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,GAAf,SACI,eAACkN,GAAA,EAAD,CAAa9O,QAAQ,WAArB,UACI,cAAC+O,GAAA,EAAD,qCAGA,cAACC,GAAA,EAAD,CACAC,aAAY,UAAErQ,EAAK2P,kBAAP,aAAE,EAAiBI,eAC/BjH,SAAU5B,EACV0J,WAAS,EACTC,QAAS,EACTjI,MAAM,kBACNxB,KAAK,iBACL8B,eACI,cAACoH,GAAA,EAAD,CAAgBpO,SAAS,QAAzB,SACI,cAAC4O,GAAA,EAAD,CAAW1H,SAAS,oBAOpC,eAACM,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,GAAf,UAEY8D,EACI,cAACyC,GAAA,EAAD,CAAOxI,MAAO,CAACuB,SAAU,QAAStB,OAAQ,UAAWI,QAAQ,SAASoI,SAAS,QAA/E,SACK1C,IAEJ,6BAGT,cAAC3F,EAAA,EAAD,CACAmI,KAAK,SACLlI,QAAQ,YACRuC,QA1MK,4CA2MLd,GAAI,CAAE2F,GAAI,EAAGiB,GAAI,GAJjB,4B,4DChCTsH,OAvKf,SAAoBlR,GAChB,MAAwB4B,qBAAWlC,GACnC,GADA,EAAOS,KAAP,EAAaC,QACaH,sBAA1B,mBAAOgH,EAAP,KAAcC,EAAd,KACA,EAAwBjH,mBAAS,CAC7BkR,OAAQ,YACRC,aAAc,EACd3B,OAAO,EACPF,OAAO,EACP8B,SAAS,EACT3B,OAAO,EACPC,YAAY,IAPhB,mBAAO5I,EAAP,KAAaC,EAAb,KASA,EAAkC/G,mBAAS,aAA3C,mBAAOqR,EAAP,KAAkBC,EAAlB,KAOA,SAASlK,EAAkBtD,GAAuB,IAAhByN,EAAe,uDAAN,KACjCjK,EAASxD,EAAMuD,OAAfC,KAON,OALIiK,IACAjK,EAAOiK,GAGXtK,IACOF,EAAQ,6BAAKD,GAAN,mBAAaQ,EAAOxD,EAAMuD,OAAOpH,SAGnD,SAASuR,EAAqB1N,GAE1B,OADAmD,IACOF,EAAQ,6BAAKD,GAAN,mBAAahD,EAAMuD,OAAOC,KAAOxD,EAAMuD,OAAOoK,WAhCzC,8CAmCvB,WAAgCpF,GAAhC,UAAAC,EAAA,sDACIvM,EAAMoQ,aAAa9D,EAAG,CAACqF,UAAW5K,EAAM7E,YAAa,IADzD,4CAnCuB,sBAuCvB,OACI,eAACM,EAAA,EAAD,CAAWC,SAAS,KAApB,UACI,cAACI,EAAA,EAAD,CAAYgJ,MAAM,SAAStK,QAAQ,QAAQ4J,cAAY,EAAvD,sCAGA,cAACF,GAAA,EAAD,IACA,eAACpB,GAAA,EAAD,CAAMC,WAAS,EAAC9G,GAAI,CAAC8I,EAAG,GAAxB,UACI,cAACjC,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,SACI,cAACN,EAAA,EAAD,CAAYgJ,MAAM,OAAO5H,GAAG,eAAekH,cAAY,EAAvD,6CAIJ,cAACtB,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,SACI,eAACyO,GAAA,EAAD,CACA1Q,MAAO,CAAC0K,MAAO,SACfxK,MAAM,UACNyQ,WAAS,EACT3R,MAAOoR,EACP/J,KAAK,SACL0B,SA5Cc,SAAClF,EAAO+N,GAClCP,EAAaO,GACbzK,EAAkBtD,EAAO,WA2CbtC,KAAK,QAPL,UASI,cAACsQ,GAAA,EAAD,CAAcxK,KAAK,SAASrH,MAAM,YAAlC,uBACA,cAAC6R,GAAA,EAAD,CAAcxK,KAAK,SAASrH,MAAM,QAAlC,mBACA,cAAC6R,GAAA,EAAD,CAAcxK,KAAK,SAASrH,MAAM,eAAlC,kCAIZ,cAAC+K,GAAA,EAAD,IAEA,eAACpB,GAAA,EAAD,CAAMC,WAAS,EAAC9G,GAAI,CAAC8I,EAAG,GAAxB,UACI,cAACjC,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,SACI,cAACN,EAAA,EAAD,CAAYgJ,MAAM,OAAO5H,GAAG,eAAekH,cAAY,EAAvD,oDAIJ,cAACtB,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,SACI,cAAC6O,GAAA,EAAD,CACA9Q,MAAO,CAAC6J,MAAO,OAAQa,MAAO,SAC9B3C,SAAU5B,EACVE,KAAK,eACLiJ,aAAc,EACdyB,KAAM,EACNC,OAAK,EACLC,IAAK,EACLC,IAAK,EACLC,kBAAkB,cAI1B,cAACpH,GAAA,EAAD,IAEA,eAACpB,GAAA,EAAD,CAAMC,WAAS,EAAC9G,GAAI,CAAC8I,EAAG,GAAxB,UACI,cAACjC,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,SACI,cAACN,EAAA,EAAD,CAAYgJ,MAAM,OAAO5H,GAAG,eAAekH,cAAY,EAAvD,4CAIJ,cAACtB,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,SACI,eAAC,KAAD,CAAKjC,MAAO,CAAE0K,MAAO,SAArB,UACI,cAAC0G,GAAA,EAAD,CACIC,QACI,cAACC,GAAA,EAAD,CAAUvJ,SAAUwI,EAAsBlK,KAAK,UAEnDwB,MAAM,UAEV,cAACuJ,GAAA,EAAD,CACIC,QACI,cAACC,GAAA,EAAD,CAAUvJ,SAAUwI,EAAsBlK,KAAK,UAEnDwB,MAAM,UAEV,cAACuJ,GAAA,EAAD,CACIC,QACI,cAACC,GAAA,EAAD,CAAUvJ,SAAUwI,EAAsBlK,KAAK,YAEnDwB,MAAM,oBAKtB,cAACkC,GAAA,EAAD,IAEA,eAACpB,GAAA,EAAD,CAAMC,WAAS,EAAC9G,GAAI,CAAC8I,EAAG,GAAxB,UACI,cAACjC,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,SACI,cAACN,EAAA,EAAD,CAAYgJ,MAAM,OAAO5H,GAAG,eAAekH,cAAY,EAAvD,4CAIJ,cAACtB,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,SACI,eAAC,KAAD,CAAKjC,MAAO,CAAE0K,MAAO,SAArB,UACI,cAAC0G,GAAA,EAAD,CACIC,QACI,cAACC,GAAA,EAAD,CAAUvJ,SAAUwI,EAAsBlK,KAAK,UAEnDwB,MAAM,UAEV,cAACuJ,GAAA,EAAD,CACIC,QACI,cAACC,GAAA,EAAD,CAAUvJ,SAAUwI,EAAsBlK,KAAK,eAEnDwB,MAAM,uBAMtB,uBAEI9B,EACI,cAACyC,GAAA,EAAD,CAAOxI,MAAO,CAACuB,SAAU,QAAStB,OAAQ,UAAWI,QAAQ,SAASoI,SAAS,QAA/E,SACK1C,IAEJ,6BAET,cAACgE,GAAA,EAAD,IACA,cAAC3J,EAAA,EAAD,CACAmI,KAAK,SACLlI,QAAQ,YACRuC,QA9Je,4CA+Jfd,GAAI,CAAE2F,GAAI,EAAGiB,GAAI,GAJjB,sB,SCrEG6I,OApFf,SAAgBzS,GACKoH,cAAjB,IACA,EAA8BnH,oBAAS,GAAvC,mBAAgByS,GAAhB,WACA,EAAwCzS,mBAAS,IAAjD,mBAAO0S,EAAP,KACA,GADA,KAC8B1S,oBAAS,IAAvC,mBAAgB2S,GAAhB,WAEA,EAAwBhR,qBAAWlC,GAA5BS,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QACNK,EAAiBmB,qBAAWrB,GAA5BE,cAgEP,OAdA6H,QAAQ8B,IAAIuC,oFAeR,cAAChJ,EAAA,EAAD,CAAKX,GAAI,CAAC6E,EAAG,EAAGpF,SAAU,QAAStB,OAAQ,UAA3C,SACI,eAAC,KAAD,CAAsB0R,QAfP,CACnB,YAAalG,mFACbmG,SAAU,MACVC,OAAQ,WAYJ,UACA,cAAC,KAAD,CAAeC,YA/DH,SAAClN,EAAMmN,GACvB,IAAMC,EAAgBzS,EAAcsM,KAAI,SAAAhD,GAUpC,MATa,CACToJ,aAAcpJ,EAAKS,IACnB4I,YAAarJ,EAAKsJ,MAClBC,OAAQ,CACJC,cAAe,MACfrT,MAAO6J,EAAKpJ,WAOxB,OAAOsS,EAAQO,MACVnN,OAAO,CACRoN,eAAgBP,EAEhBQ,oBAAqB,CACjBC,oBAAqB,iBAGxBxL,MAAK,SAACyL,GAEP,OADAhB,EAAWgB,GACJA,MAuCkCC,UAnC/B,SAAC/N,EAAMmN,GACrB,OAAOA,EAAQO,MAAMM,UAAU3L,KAAxB,iCAAAoE,EAAA,MAA6B,WAAgBwH,GAAhB,kBAAAxH,EAAA,6DACxByH,EAAUD,EAAVC,MACR1L,QAAQ8B,IAAI4J,GAEKrH,uCAJe,SAKTvG,IAAM6N,MAAMnG,6CAAsB3N,EAAKqK,IAAM,UAAW,CAAC0J,YAAa,CAACC,OAAQH,KALtE,OAK1BnO,EAL0B,OAMhCzF,EAAQyF,EAASC,MACjB4M,GAAW,GACX1S,EAAM6T,YAR0B,2CAA7B,wDAkC4D3S,MAXzD,CACVkT,OAAQ,aACRhT,MAAO,OACPiT,MAAO,OACP7Q,OAAQ,GACR8Q,SAAS,KAQJ3B,GACG,cAACjJ,GAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyBgJ,U,mBC5E1B,SAAS4B,GAAavU,GACnC,IAAMwU,EAASC,uBACTC,EAAWC,yBAEjB,EAA8B1U,mBAAS,MAAvC,mBAAOsI,EAAP,KAAgBqM,EAAhB,KACA,EAAkC3U,oBAAS,GAA3C,mBAAO4U,EAAP,KAAkBC,EAAlB,KAEA7S,qBAAU,WACR,IAAKuS,EACH,OAAO,cAAC,EAAD,IAGT,IAAMO,EAAe,IAAIC,gBAAgBC,OAAOC,SAASC,QAAQtH,IAC/D,gCAGF,IAAKkH,EACH,OAAO,cAAC,EAAD,IAGTP,EAAOY,sBAAsBL,GAAc5M,MAAK,YAC9C,OADqE,EAApBkN,cAC3BrP,QACpB,IAAK,YACH4O,EAAW,sBACX,MACF,IAAK,aACHA,EAAW,+BACX,MACF,IAAK,0BACHA,EAAW,sDACX,MACF,QACEA,EAAW,+BAIhB,CAACJ,IAEJ,IAAMc,EAAY,yCAAG,WAAOhJ,GAAP,kBAAAC,EAAA,yDACnBD,EAAEtE,iBACGwM,GAAWE,EAFG,wDAQnBI,GAAa,GARM,SAUKN,EAAOe,eAAe,CAC1Cb,WACAc,cAAe,CAEXC,WAAY,kCAdD,gBAwBA,gBAdXxO,EAVW,EAUXA,OAcEwC,MAAwC,qBAAfxC,EAAMwC,KACvCmL,EAAW3N,EAAMsB,SAEjBqM,EAAW,gCAGbE,GAAa,GAEb9U,EAAM6T,YAhCa,4CAAH,sDAmClB,OACE,uBAAM5P,GAAG,eAAe8D,SAAUuN,EAAlC,UACE,cAAC,kBAAD,CAAgBrR,GAAG,oBACnB,cAAC3C,EAAA,EAAD,CAAQmI,KAAK,SAASlI,QAAQ,YAAYyB,GAAI,CAAC0S,GAAI,GAAI5M,WAAS,EAAC6M,SAAUd,IAAcL,IAAWE,EAAUzQ,GAAG,SAAjH,SACE,sBAAMA,GAAG,cAAT,SACG4Q,EAAY,qBAAK/V,UAAU,UAAUmF,GAAG,YAAmB,cAI/DsE,GAAW,qBAAKtE,GAAG,kBAAR,SAA2BsE,OCpF7C,IAAMqN,GAAgBC,aAAWlJ,+GAmClBmJ,OAjCf,SAAgB9V,GACZ,MAAwCC,mBAAS,IAAjD,mBAAO8U,EAAP,KAAqBgB,EAArB,KAEA9T,qBAAU,WAEN,wBAAC,6BAAAsK,EAAA,4DACoBI,uCADpB,SAG6BvG,IAAM8B,KAAK4F,6DAAqC,CAAEkI,MAAO,CAAC,CAAE/R,GAAI,gBAH7F,OAGSgS,EAHT,OAIGF,EAAgBE,EAAYnQ,KAAKiP,cACjCzM,QAAQ8B,IAAI6L,EAAYnQ,MAL3B,0CAAD,KAOD,IAEH,IAGM+M,EAAU,CACZkC,eACAmB,WALe,CACfC,MAAO,WAOX,OACI,cAACxS,EAAA,EAAD,CAAKX,GAAI,CAAC6E,EAAG,EAAGpF,SAAU,QAAStB,OAAQ,UAA3C,SACK4T,GACG,cAAC,YAAD,CAAUlC,QAASA,EAAS2B,OAAQoB,GAApC,SACI,cAACrB,GAAD,CAAcV,UAAW7T,EAAM6T,iBCUpCuC,OArCf,SAAqBpW,GACEoH,cAAnB,IACA,EAAwBxF,qBAAWlC,GACnC,GADA,EAAOS,KAAP,EAAaC,QACaH,sBAA1B,mBACA,GADA,UACwBA,mBAAS,CAC7BkU,QAAQ,EACRK,QAAQ,KAFZ,mBAoBA,OApBA,UAqBI,eAAChS,EAAA,EAAD,CAAWC,SAAS,KAApB,UACQ,uBACA,cAAC,GAAD,IACA,cAACwI,GAAA,EAAD,IACA,uBACA,cAAC,GAAD,IACA,uBACA,cAACA,GAAA,EAAD,Q,oDCwEDoL,OA7Ff,SAA0BrW,GACtB,MAAgCC,oBAAS,GAAzC,mBAAOqW,EAAP,KAAiBC,EAAjB,KACA,EAAwB3U,qBAAWlC,GAA5BS,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QACb,EAAoDJ,EAAMwW,aAAnDhM,EAAP,EAAOA,IAAK6I,EAAZ,EAAYA,MAAOD,EAAnB,EAAmBA,YAAa3P,EAAhC,EAAgCA,MAAOuI,EAAvC,EAAuCA,SAMnCrL,EAAQ,EATiB,8CAuB7B,iCAAA4L,EAAA,yDACIgK,GAAaD,GAEPxI,EAAWnB,uCACb2J,EAJR,gCAK+BlQ,IAAM6N,MAAN,UAAenG,EAAf,iBAAgC3N,EAAKqK,IAArC,0BAA0DA,EAA1D,SAL/B,OAKc3E,EALd,OAMQzF,EAAQyF,EAASC,MANzB,wCAS+BM,IAAM6N,MAAN,UAAenG,EAAf,iBAAgC3N,EAAKqK,IAArC,0BAA0DA,EAA1D,YAT/B,QASc3E,EATd,OAUQzF,EAAQyF,EAASC,MAVzB,6CAvB6B,sBAqC7B,OA3BGkG,EAASa,SACRlM,EAAQqL,EAASyK,QAAO,SAAC9V,EAAO+V,GAAR,OAAoB/V,EAAQ+V,EAAQ7L,QAAO,GACnElK,EAAQ+L,OAAO/L,EAAMqO,QAAQ,KAGjC/M,qBAAU,WAEH9B,EAAKwW,cAAcC,SAASpM,IAC3B+L,GAAY,KAEjB,IAkBC,eAACzL,GAAA,EAAD,CAAM9H,GAAI,CAAE+H,MAAO,IAAK5J,OAAQ,QAAS6J,QAAQ,EAAjD,UACQ,cAAC3H,EAAA,EAAD,CACIN,UAAU,MACV7B,MAAO,CAACoC,UAAW,WACnBE,OAAO,MACPC,MAAOA,EACPC,IAAK2P,IAET,cAACpI,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,WACI,cAACrI,EAAA,EAAD,CAAYsI,cAAY,EAACrI,QAAQ,EAAMvB,QAAQ,KAAKwB,UAAU,MAA9D,SACKsQ,IAEL,cAACpI,GAAA,EAAD,IACA,cAACpI,EAAA,EAAD,CAAYtB,QAAQ,QAAQH,MAAM,iBAAlC,SACKgS,IAEL,eAACzP,EAAA,EAAD,CAAKzC,MAAO,CAACgC,QAAS,OAAQqI,eAAgB,gBAAiBjJ,gBAAiB,QAASkB,OAAQ,QAAjG,UACI,cAACG,EAAA,EAAD,UACI,cAAC,IAAD,CAAM1C,GAAI,kBAAoBuJ,EAAKtJ,MAAO,CAACG,eAAgB,QAA3D,SACI,cAACC,EAAA,EAAD,CACAC,QAAQ,WACRL,MAAO,CAAC0K,MAAO,QAASzK,OAAQ,QAASqC,OAAQ,QAFjD,0BAQR,cAACG,EAAA,EAAD,CAAKzC,MAAO,CAACsC,OAAQ,QAArB,SACI,eAACX,EAAA,EAAD,CAAYtB,QAAQ,KAAKsK,MAAM,QAAQzK,MAAM,iBAAiBF,MAAO,CAACsC,OAAQ,OAAQuH,MAAO,OAAQxB,SAAU,OAAQvG,GAAI,CAAC2F,GAAI,EAAGmD,EAAG,GAAtI,UACKnL,EADL,eAIJ,cAACgD,EAAA,EAAD,UACI,cAACkT,GAAA,EAAD,CACApV,KAAK,QACLL,MAAM,UACNF,MAAO,CAACsC,OAAQ,OAAQlB,gBAAiBgU,EAAW,UAAY,WAChE,aAAW,MACXxS,QA7EK,2CAwEL,SAOIwS,EACI,cAAC,KAAD,IAEA,cAAC,KAAD,kBC5BrBQ,OA/Df,SAA0B9W,GACHoH,cAAnB,IACA,EAAwBxF,qBAAWlC,GACnC,GADA,EAAOS,KAAP,EAAaC,QACaH,sBAA1B,mBAAOgH,EAAP,KACA,GADA,KACwBhH,sBAAxB,mBACA,GADA,UACyCA,sBAAzC,mBAAO0W,EAAP,KAAsBI,EAAtB,KAL6B,8CAoB7B,WAAgCzK,GAAhC,UAAAC,EAAA,sDACIvM,EAAMoQ,aAAa9D,EAAG,CAACpK,YAAa,IADxC,4CApB6B,sBAwB7B,OAjBAD,qBAAU,WACN,wBAAC,6BAAAsK,EAAA,4DACoBI,uCADpB,SAE0BvG,IAAMyH,IAAIC,uDAFpC,OAESjI,EAFT,OAGGkR,EAAgBlR,EAASC,KAAKkR,OAAO,EAAG,IAH3C,0CAAD,KAKD,IAWCL,EAKA,eAACnU,EAAA,EAAD,CAAWC,SAAS,KAApB,UACI,cAACI,EAAA,EAAD,CAAYgJ,MAAM,SAAStK,QAAQ,KAAK4J,cAAY,EAApD,qCAGA,cAACF,GAAA,EAAD,IACA,cAAC,KAAD,CAAKtD,WAAW,SAASsP,UAAU,SAAS/T,QAAQ,OAAOwE,cAAc,MAAzE,SAEQiP,EAAc5J,KAAI,SAAAyJ,GACd,OAAQ,cAAC,GAAD,CAAyCA,aAAcA,GAAhCA,EAAahM,UAKxD,uBAEIvD,EACI,cAACyC,GAAA,EAAD,CAAOxI,MAAO,CAACuB,SAAU,QAAStB,OAAQ,UAAWI,QAAQ,SAASoI,SAAS,QAA/E,SACK1C,IAEJ,6BAET,cAACgE,GAAA,EAAD,IACA,cAAC3J,EAAA,EAAD,CACAmI,KAAK,SACLlI,QAAQ,YACRuC,QAtDqB,4CAuDrBd,GAAI,CAAE2F,GAAI,EAAGiB,GAAI,GAJjB,qBA1BG,cAAC,EAAD,K,oBCyCAsN,OAtDf,SAAoBlX,GAChB,MAAwB4B,qBAAWlC,GAA5BS,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QACb,EAAoCH,oBAAS,GAA7C,mBAAOkX,EAAP,KAAmBC,EAAnB,KACA,EAAgDpX,EAAMqX,OAA/CxH,EAAP,EAAOA,KAAME,EAAb,EAAaA,WAAYC,EAAzB,EAAyBA,OAAQC,EAAjC,EAAiCA,YAHV,8CAKvB,WAAgCnK,GAAhC,kBAAAyG,EAAA,4DACqBI,uCACX2K,EAAU,CAACzQ,UAAWf,EAAKe,UAAWC,SAAUhB,EAAKgB,SAAUgJ,WAAYhK,EAAKgK,YAF1F,SAG2B1J,IAAM6N,MAAMnG,6CAAsB3N,EAAKqK,IAAM,UAAW8M,GAHnF,OAGUzR,EAHV,OAIIzF,EAAQyF,EAASC,MAJrB,4CALuB,sBAYvB,OACI,eAACnC,EAAA,EAAD,WACI,cAACd,EAAA,EAAD,CAAYzB,MAAM,UAAUyK,MAAM,OAAOtK,QAAQ,KAAjD,6BACA,cAACuJ,GAAA,EAAD,CAAM5J,MAAO,CAACuB,SAAU,OAAQ8K,OAAQ,qBAAsBD,aAAc,MAAOE,QAAS,SAAUrM,OAAQ,YAA9G,SACI,eAAC0I,GAAA,EAAD,CAAMC,WAAS,EAACwB,QAAS,GAAzB,UACI,cAACzB,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,GAAf,SACI,eAACQ,EAAA,EAAD,CAAKT,QAAQ,OAAb,UACI,cAAC,KAAD,CAAiBF,GAAI,CAACuU,GAAI,EAAG7B,GAAI,IAAMtU,MAAM,YAC7C,cAACyB,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,KAAKH,MAAO,QAA7C,SAAuD,mCAASjB,EAAK0G,UAAd,KAA2B1G,EAAK2G,mBAG/F,cAAC+C,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,GAAIH,GAAI,CAACuU,GAAI,GAA5B,SAEI,eAAC1U,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,QAAjC,UAA0CsO,EAA1C,KAAkDE,OAEtD,cAAClG,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,GAAIH,GAAI,CAACuU,GAAI,GAA5B,SAEI,eAAC1U,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,QAAjC,UAA0CyO,EAA1C,KAAoDC,OAExD,eAACpG,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,GAAIH,GAAI,CAACuU,GAAI,GAA5B,UACI,cAACtM,GAAA,EAAD,IACA,cAACpI,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,YAAjC,SAA6C,kDAC7C,cAACsB,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,QAAjC,SAAyC,4BAAIvB,EAAMqX,OAAOnH,2BAItE,cAACrN,EAAA,EAAD,CAAYgJ,MAAM,QAAQ7I,GAAI,CAACuU,GAAI,EAAG7B,GAAI,GAA1C,SACI,cAACpU,EAAA,EAAD,CAAQwC,QAAS,kBAAMsT,GAAeD,IAAatL,MAAM,OAAO7I,GAAI,CAACuU,GAAI,GAAI9V,KAAK,SAASF,QAAQ,OAAOH,MAAO+V,EAAa,UAAY,UAA1I,SACKA,EAAa,OAAS,WAI3BA,GACI,cAACrM,GAAA,EAAD,CAAM5J,MAAO,CAACuB,SAAU,OAAQ8K,OAAQ,kBAAmBD,aAAc,MAAOE,QAAS,SAAUrM,OAAQ,SAAUqW,aAAc,QAAnI,SACI,cAAC,GAAD,CAAcrH,cAAc,EAAMC,aAAc,SAAC9D,EAAGxG,GAAJ,OA9C7C,2CA8C0D2R,CAAiB3R,YCwCvF4R,OApGf,WACI,MAAwB9V,qBAAWlC,GAA5BS,EAAP,EAAOA,KACP,GADA,EAAaC,QAC8CwB,qBAAWrB,IAA/DE,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,iBAAkBC,EAAxC,EAAwCA,MAAOC,EAA/C,EAA+CA,SAF/B,SAUD+W,IAVC,6EAUhB,6BAAApL,EAAA,4DACqBI,uCADrB,SAG+BvG,IAAMyH,IAAIC,6CAAsB3N,EAAKqK,IAAM,kBAH1E,OAGUoN,EAHV,OAIIhX,EAASgX,EAAa9R,KAAKnF,OAC3BD,EAAiBkX,EAAa9R,KAAK6Q,eALvC,4CAVgB,sBA6BhB,OAzBA1U,qBAAU,WACN,wBAAC,uBAAAsK,EAAA,sDACGoL,IADH,0CAAD,KAGD,IAqBClX,EAGA,cAACkD,EAAA,EAAD,CAAKZ,UAAW8U,KAAO7U,GAAI,CAAC8U,SAAU,OAAQxV,gBAAiB,UAAWgL,aAAc,OAAQE,QAAS,KAAMrM,OAAQ,YAAaoM,OAAQ,iBAAkBhK,QAAS,OAAvK,SACQ,eAACI,EAAA,EAAD,CAAKX,GAAI,CAACP,SAAU,QAAStB,OAAQ,aAArC,UACI,cAAC0B,EAAA,EAAD,CAAYtB,QAAQ,KAApB,2BACA,uBACA,cAACsB,EAAA,EAAD,CAAYgJ,MAAM,OAAOzK,MAAM,UAAUG,QAAQ,KAAjD,oBACA,cAAC0J,GAAA,EAAD,IACA,eAACtH,EAAA,EAAD,CAAKT,QAAQ,OAAOqI,eAAe,gBAAnC,UACI,cAAC1I,EAAA,EAAD,CAAYtB,QAAQ,YAApB,sBACA,cAACsB,EAAA,EAAD,CAAYtB,QAAQ,QAApB,SAA4B,8BAAIpB,EAAK0G,UAAT,IAAqB1G,EAAK2G,kBAGlD,OAAJ3G,QAAI,IAAJA,OAAA,EAAAA,EAAM2P,aACF,qCACA,eAACnM,EAAA,EAAD,CAAKT,QAAQ,OAAOqI,eAAe,gBAAnC,UACI,cAAC1I,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,YAAjC,gCACA,cAACsB,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,QAAjC,SAAyC,8BAAIpB,EAAK2P,WAAWD,KAApB,KAA4B1P,EAAK2P,WAAWC,mBAEzF,eAACpM,EAAA,EAAD,CAAKT,QAAQ,OAAOqI,eAAe,gBAAnC,UACI,cAAC1I,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,YAAjC,mCACA,cAACsB,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,QAAjC,SAAyC,8BAAIpB,EAAK2P,WAAWE,OAApB,KAA8B7P,EAAK2P,WAAWG,oBAE3F,eAACtM,EAAA,EAAD,CAAKT,QAAQ,OAAOqI,eAAe,gBAAnC,UACI,cAAC1I,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,YAAjC,kCACA,cAACsB,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,QAAjC,SAAyC,4BAAIpB,EAAK2P,WAAWI,yBAKzE,cAACjF,GAAA,EAAD,IACA,uBACA,cAACpI,EAAA,EAAD,CAAYgJ,MAAM,OAAOzK,MAAM,UAAUG,QAAQ,KAAjD,0BACA,cAAC0J,GAAA,EAAD,IAEIxK,GACI,qCAEQA,EAAcsM,KAAI,SAACgL,EAAK3L,GACpB,OACI,eAACzI,EAAA,EAAD,CAAmBT,QAAQ,OAAOqI,eAAe,gBAAjD,UACI,eAAC1I,EAAA,EAAD,CAAYtB,QAAQ,YAApB,UAAiC6K,EAAM,EAAvC,KAA4C2L,EAAI1E,SAChD,cAACxQ,EAAA,EAAD,CAAYtB,QAAQ,QAApB,SAA4B,8BAAIwW,EAAIpX,MAAR,gBAFtBoX,EAAIvN,QAO1B,cAACS,GAAA,EAAD,IACA,uBACA,cAACpI,EAAA,EAAD,CAAYgJ,MAAM,OAAOzK,MAAM,UAAUG,QAAQ,KAAjD,qBACA,cAAC0J,GAAA,EAAD,IACA,eAACtH,EAAA,EAAD,CAAKT,QAAQ,OAAOqI,eAAe,gBAAnC,UACI,cAAC1I,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,YAAjC,sBACA,cAACsB,EAAA,EAAD,CAAYtB,QAAQ,YAApB,2BAEJ,eAACsB,EAAA,EAAD,CAAYgJ,MAAM,QAAQtK,QAAQ,KAAlC,oBAA+CZ,EAA/C,YACA,cAACsK,GAAA,EAAD,IACA,uBACA,eAACpI,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,KAAKL,MAAO,CAACqI,SAAU,SAAxD,yCAA8F,uCAA9F,sBAA8H,4BAjE1J,SAA0ByO,EAAMC,GAC5B,IAAIC,EAAa,IAAIC,KAAKH,EAAKI,WAE/B,OADAF,EAAWG,QAAQL,EAAKM,WAAa,EAAIL,EAAYD,EAAKO,SAAW,GAAK,EAAG,GACtEL,EAAWM,qBA8DwIC,CAAiB,IAAIN,KAAQ,QAC/J,uBACA,cAACtV,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,QAAjC,SAAyC,qGACzC,cAACsB,EAAA,EAAD,CAAYgJ,MAAM,OAAOtK,QAAQ,QAAjC,SAAyC,kHA9D3C,MCvBxBmX,GAAQ,CAAC,SAAU,QAAS,UAE5BC,GAAY,CACdzW,YAAa,GACb4N,WAAY,CACRD,KAAM,GACNE,WAAY,GACZC,OAAQ,GACRC,YAAa,GACbC,eAAgB,IAEpByB,UAAW,CACPR,OAAQ,QACRC,aAAc,EACd3B,OAAO,EACPF,OAAO,EACP8B,SAAS,EACT3B,OAAO,EACPC,YAAY,GAEhBuE,YAAa,CACTC,QAAQ,EACRK,QAAQ,GAEZmC,cAAe,IA+FJiC,OA5Ff,SAAsB5Y,GAClB,IAAM6Y,EAAazR,cACnB,EAAwBxF,qBAAWlC,GAA5BS,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QACb,EAA2DwB,qBAAWrB,GAAhDG,GAAtB,EAAOD,cAAP,EAAsBC,kBAAyBE,GAA/C,EAAwCD,MAAxC,EAA+CC,UAE/C,EAAoCX,oBAAS,WACzC,OAAIE,EAAK+B,YACF/B,EAAK+B,YADiB,KADjC,mBAAO4W,EAAP,KAAmBC,EAAnB,KALyB,SAUVC,EAVU,kFAUzB,WAAgCjV,EAAO+B,GAAvC,gBAAAyG,EAAA,4DACqBI,uCADrB,SAE2BvG,IAAM6N,MAAMnG,6CAAsB3N,EAAKqK,IAAM,UAAW1E,GAFnF,OAEUD,EAFV,OAGIzF,EAAQyF,EAASC,MACjB6R,IACAoB,EAAcjT,EAAK5D,aAEhB4D,EAAK5D,YAAc,GAClB2W,EAAW,aARnB,4CAVyB,oEAsBzB,6BAAAtM,EAAA,4DACqBI,uCADrB,SAE2BvG,IAAM6N,MAAMnG,6CAAsB3N,EAAKqK,IAAM,UAAWmO,IAFnF,OAEU9S,EAFV,OAGIkT,EAAc,IACd3Y,EAAQyF,EAASC,MACjB+S,EAAW,KALf,4CAtByB,+BA+BVlB,IA/BU,6EA+BzB,6BAAApL,EAAA,4DACqBI,uCADrB,SAG+BvG,IAAMyH,IAAIC,6CAAsB3N,EAAKqK,IAAM,kBAH1E,OAGUoN,EAHV,OAIIhX,EAASgX,EAAa9R,KAAKnF,OAC3BD,EAAiBkX,EAAa9R,KAAK6Q,eALvC,4CA/ByB,sBAuCzB,OACI,eAACnU,EAAA,EAAD,CAAWtB,MAAO,CAACuG,UAAW,SAA9B,UACI,cAACwR,GAAA,EAAD,CAASH,WAAYA,EAArB,SACKJ,GAAM3L,KAAI,SAAChE,EAAOqD,GAIf,OACI,cAAC8M,GAAA,EAAD,6BAJc,IAId,aACI,cAACC,GAAA,EAAD,6BAJW,IAIX,aAA4BpQ,OADrBA,QAMvB,eAACpF,EAAA,EAAD,CAAKZ,UAAW8U,KAAO7U,GAAI,CAAC+H,MAAO,OAAQuC,aAAc,OAAQE,QAAS,KAAMrM,OAAQ,aAAxF,UAE6B,IAArBhB,EAAK+B,YACD,cAACyB,EAAA,EAAD,CAAKX,GAAI,CAACP,SAAU,QAAStB,OAAQ,aAArC,SACI,cAAC,GAAD,CAAYiP,aAAc4I,MAE7B,6BAGgB,IAArB7Y,EAAK+B,YACD,cAACyB,EAAA,EAAD,CAAKX,GAAI,CAACP,SAAU,SAAUtB,OAAQ,aAAtC,SACI,cAAC,GAAD,CAAkBiP,aAAc4I,MAEnC,6BAGgB,IAArB7Y,EAAK+B,YACD,cAACyB,EAAA,EAAD,CAAKX,GAAI,CAACP,SAAU,QAAStB,OAAQ,aAArC,SACI,cAAC,GAAD,CAAciP,aAAc4I,MAE/B,6BAGgB,IAArB7Y,EAAK+B,YACD,cAACyB,EAAA,EAAD,CAAKX,GAAI,CAACP,SAAU,QAAStB,OAAQ,aAArC,SACI,cAAC,GAAD,CAAaiP,aAAc4I,MAE9B,6BAET,cAAC1X,EAAA,EAAD,CAAQwC,QAlFK,2CAkFb,qBAKJ,cAAC,GAAD,QCvFGsV,OApCf,WACI,MAA0CnZ,mBAAS,IAAnD,mBAAO0W,EAAP,KAAsB0C,EAAtB,KAUA,OARApX,qBAAU,WACN,wBAAC,6BAAAsK,EAAA,4DACgBI,uCADhB,SAE0BvG,IAAMyH,IAAIjB,sDAFpC,OAES/G,EAFT,OAGGwT,EAAiBxT,EAASC,MAH7B,0CAAD,KAKD,IAEC6Q,EAAc9J,OAKd,qBACA3L,MAAO,CACCgC,QAAS,OACT4J,SAAU,OACVvB,eAAgB,SAChB5D,WAAY,aACZoD,MAAO,MACP5J,OAAQ,SACRqC,OAAQ,QARhB,SAYQmT,EAAc5J,KAAI,SAAAyJ,GACd,OAAO,cAAC,GAAD,CAAyCA,aAAcA,GAAhCA,EAAahM,UAjBhD,cAAC,EAAD,K,UC0FA8O,OA3Ff,WACI,IAAOrV,EAAM2J,cAAN3J,GACP,EAAyChE,mBAAS,MAAlD,mBAAOuW,EAAP,KAAqB6C,EAArB,KAYA,GAVApX,qBAAU,WACN,wBAAC,6BAAAsK,EAAA,6DACG0I,OAAOsE,SAAS,EAAG,GACF5M,uCAFpB,SAG0BvG,IAAMyH,IAAIC,sDAA+B7J,GAHnE,OAGS4B,EAHT,OAIGyC,QAAQ8B,IAAIvE,EAASC,MACrBuT,EAAiBxT,EAASC,MAL7B,0CAAD,KAOD,KAEC0Q,EACA,OAAO,cAAC,EAAD,IAGX,IAAI7V,EAAQ6V,EAAaxK,SAASyK,QAAO,SAAC9V,EAAO+V,GAAR,OAAoB/V,EAAQ+V,EAAQ7L,QAAO,GAGpF,OAFAlK,EAAQ+L,OAAO/L,EAAMqO,QAAQ,IAGzB,cAACxM,EAAA,EAAD,CAAWuL,OAAK,EAAC7M,MAAO,CAACoB,gBAAiB,UAAWkL,QAAS,QAA9D,SACI,eAAC3D,GAAA,EAAD,CAAMC,WAAS,EAACwB,QAAS,EAAzB,UAEI,eAACzB,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,UACI,qBAAKjC,MAAO,CAACoC,UAAW,OAAQkW,MAAO,OAAQzO,MAAO,OAAQuC,aAAc,QAASa,IAAKqI,EAAa/S,MAAOC,IAAK8S,EAAanD,QAChI,cAACxQ,EAAA,EAAD,CAAYtB,QAAQ,KAAKwB,UAAU,KAAnC,SACKyT,EAAanD,QAElB,cAACxQ,EAAA,EAAD,CAAYtB,QAAQ,YAAYwB,UAAU,KAA1C,SACKyT,EAAapD,cAElB,0BAGJ,eAACvJ,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,UACI,cAACsW,GAAA,EAAD,CACAzW,GAAI,CACA+H,MAAO,OACP1I,SAAU,WACVqX,SAAU,OACVC,UAAW,IACX,OAAQ,CAAEnM,QAAS,IAEvBoM,UAAW,uBARX,SAWIpD,EAAaxK,SAASe,KAAI,SAAC8M,EAAMzN,GAC7B,OACI,qCACI,sBAAKlL,MAAO,CAACuB,SAAU,OAAQe,OAAQ,QAAvC,UACI,eAACX,EAAA,EAAD,CAAYC,QAAQ,EAAM5B,MAAO,CAACuB,SAAU,MAAOe,OAAQ,OAAQoI,MAAM,QAASrK,QAAQ,QAAQwB,UAAU,IAA5G,UACI,mCAASqJ,EAAM,EAAf,OADJ,IACiCyN,EAAKtS,QAEtC,cAAC1E,EAAA,EAAD,CAAY3B,MAAO,CAACuB,SAAU,MAAOe,OAAQ,OAAQoI,MAAM,SAAUxK,MAAM,UAAUG,QAAQ,QAAQwB,UAAU,IAA/G,SACA,mCAAS8W,EAAKhP,MAAd,kBAGJ,cAACI,GAAA,EAAD,YAMhB,uBACA,cAACA,GAAA,EAAD,IACA,eAACpI,EAAA,EAAD,CAAYgJ,MAAM,QAAQtK,QAAQ,KAAKwB,UAAU,KAAjD,oBACYpC,EADZ,gBAKJ,eAACkJ,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,GAAIjC,MAAO,CAAC4Y,UAAW,qBAAtC,UACI,cAACjX,EAAA,EAAD,CAAYgJ,MAAM,SAAStK,QAAQ,KAAKwB,UAAU,KAAlD,6BAGA,cAACkI,GAAA,EAAD,IACA,cAACzI,EAAA,EAAD,CACAtB,MAAO,CAAC6Y,UAAU,QAAS7W,QAAS,OAAQ4J,SAAU,OAAQvB,eAAe,iBAD7E,SAGKiL,EAAaxK,SAASe,KAAI,SAAA8M,GACvB,OAAO,cAAC,GAAD,CAAatP,QAASsP,kBC3B1CG,OA7Bf,WACI,MAAoC/Z,mBAAS,GAA7C,mBACA,GADA,UACwCA,mBAAS,OAAjD,mBAAOuW,EAAP,KAAqBO,EAArB,KACA,EAAwBnV,qBAAWlC,GAcnC,OAdA,EAAOS,KAAP,EAAaC,QAEb6B,qBAAU,WACN,wBAAC,6BAAAsK,EAAA,4DAEkB,2BAEEI,uCAJpB,SAK0BvG,IAAMyH,IAAIC,+EALpC,OAKSjI,EALT,OAMGyC,QAAQ8B,IAAIvE,EAASC,MACrBiR,EAAgBlR,EAASC,MAP5B,0CAAD,KASD,IAEC0Q,EAKA,cAAChU,EAAA,EAAD,CAAWC,SAAS,KAAKvB,MAAO,CAACoB,gBAAiB,SAAlD,SACI,cAACO,EAAA,EAAD,CAAYgJ,MAAM,SAAStK,QAAQ,KAAnC,2BALG,cAAC,EAAD,KC6CA0Y,OAnFf,WACI,MAAwBrY,qBAAWlC,GAA5BS,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QACb,EAAoCH,oBAAS,GAA7C,mBAAOkX,EAAP,KAAmBC,EAAnB,KAFiB,8CAIjB,WAAgCtR,GAAhC,gBAAAyG,EAAA,oEACWzG,EAAK5D,YACKyK,uCAFrB,SAG2BvG,IAAM6N,MAAMnG,6CAAsB3N,EAAKqK,IAAM,UAAW1E,GAHnF,OAGUD,EAHV,OAIIzF,EAAQyF,EAASC,MAJrB,4CAJiB,sBAWjB,OACI,eAACnC,EAAA,EAAD,WACI,cAACd,EAAA,EAAD,CAAYzB,MAAM,UAAUyK,MAAM,OAAOtK,QAAQ,KAAjD,oBACA,eAACuJ,GAAA,EAAD,CAAM5J,MAAO,CAACuB,SAAU,OAAQ8K,OAAQ,qBAAsBD,aAAc,MAAOE,QAAS,YAAarM,OAAQ,YAAjH,UACI,eAAC0I,GAAA,EAAD,CAAMC,WAAS,EAAC9G,GAAI,CAAC8I,EAAG,EAAGoO,GAAI,GAA/B,UACI,cAACrQ,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,SACI,cAACN,EAAA,EAAD,CAAYgJ,MAAM,OAAO5H,GAAG,eAAekH,cAAY,EAAvD,8BAIJ,cAACtB,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,SACI,cAACN,EAAA,EAAD,CAAYgJ,MAAM,OAAO5H,GAAG,eAAekH,cAAY,EAAvD,SACI,4BAAIhL,EAAKwR,UAAUR,gBAI/B,cAAClG,GAAA,EAAD,IACA,eAACpB,GAAA,EAAD,CAAMC,WAAS,EAAC9G,GAAI,CAAC8I,EAAG,EAAGoO,GAAI,GAA/B,UACI,cAACrQ,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,SACI,cAACN,EAAA,EAAD,CAAYgJ,MAAM,OAAO5H,GAAG,eAAekH,cAAY,EAAvD,8BAIJ,cAACtB,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,SACI,cAACN,EAAA,EAAD,CAAYgJ,MAAM,OAAO5H,GAAG,eAAekH,cAAY,EAAvD,SACI,4BAAIhL,EAAKwR,UAAUP,sBAI/B,cAACnG,GAAA,EAAD,IACA,eAACpB,GAAA,EAAD,CAAMC,WAAS,EAAC9G,GAAI,CAAC8I,EAAG,EAAGoO,GAAI,GAA/B,UACI,cAACrQ,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,SACI,cAACN,EAAA,EAAD,CAAYgJ,MAAM,OAAO5H,GAAG,eAAekH,cAAY,EAAvD,8BAIJ,cAACtB,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,SACI,cAACN,EAAA,EAAD,CAAYgJ,MAAM,OAAO5H,GAAG,eAAekH,cAAY,EAAvD,SACI,8BAAIhL,EAAKwR,UAAUlC,MAAQ,QAAU,GAAItP,EAAKwR,UAAUpC,MAAQ,UAAY,GAAIpP,EAAKwR,UAAUN,QAAU,YAAc,aAInI,cAACpG,GAAA,EAAD,IACA,eAACpB,GAAA,EAAD,CAAMC,WAAS,EAAC9G,GAAI,CAAC8I,EAAG,EAAGoO,GAAI,GAA/B,UACI,cAACrQ,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,SACI,cAACN,EAAA,EAAD,CAAYgJ,MAAM,OAAO5H,GAAG,eAAekH,cAAY,EAAvD,mCAIJ,cAACtB,GAAA,EAAD,CAAME,MAAI,EAAC5G,GAAI,EAAf,SACI,cAACN,EAAA,EAAD,CAAYgJ,MAAM,OAAO5H,GAAG,eAAekH,cAAY,EAAvD,SACI,8BAAIhL,EAAKwR,UAAUjC,MAAQ,QAAU,GAAIvP,EAAKwR,UAAUhC,WAAa,eAAiB,gBAKtG,cAAC9M,EAAA,EAAD,CAAYgJ,MAAM,QAAQ7I,GAAI,CAACuU,GAAI,EAAG7B,GAAI,GAA1C,SACI,cAACpU,EAAA,EAAD,CAAQwC,QAAS,kBAAMsT,GAAeD,IAAatL,MAAM,OAAO7I,GAAI,CAACuU,GAAI,GAAI9V,KAAK,SAASF,QAAQ,OAAOH,MAAO+V,EAAa,UAAY,UAA1I,SACKA,EAAa,OAAS,WAI3BA,GACI,cAACrM,GAAA,EAAD,CAAM5J,MAAO,CAACuB,SAAU,OAAQ8K,OAAQ,kBAAmBD,aAAc,MAAOE,QAAS,SAAUrM,OAAQ,SAAUqW,aAAc,QAAnI,SACI,cAAC,GAAD,CAAYpH,aAAc,SAAC9D,EAAGxG,GAAJ,OA3E7B,2CA2E0C2R,CAAiB3R,YClDjEqU,OAzBf,WACI,MAAkCla,mBAAS,MAA3C,mBACA,GADA,UACwB2B,qBAAWlC,IAA5BS,EAAP,EAAOA,KAEP,OAFA,EAAaC,QAGT,eAACoC,EAAA,EAAD,CAAWC,SAAS,KAAKvB,MAAO,CAACoB,gBAAiB,SAAlD,UACI,eAACO,EAAA,EAAD,CAAYtB,QAAQ,KAApB,iBAA8BpB,EAAK0G,UAAnC,oBACA,cAAChE,EAAA,EAAD,CAAYtB,QAAQ,YAApB,4CACA,uBAEA,eAACoC,EAAA,EAAD,WACI,cAAC,GAAD,CAAY0T,OAAQlX,EAAK2P,aACzB,cAAC7E,GAAA,EAAD,OAGJ,uBAEA,eAACtH,EAAA,EAAD,WACI,cAAC,GAAD,IACA,cAACsH,GAAA,EAAD,WC4CDmP,OA1Df,WACI,MAAwBxY,qBAAWlC,GAA5BS,EAAP,EAAOA,KACP,GADA,EAAaC,QAC6BwB,qBAAWrB,IAA9CE,EAAP,EAAOA,cAFa,SAIL4Z,EAJK,gFAIpB,WAAqC/N,GAArC,kBAAAC,EAAA,6DACU+N,EAAa,GAEnB7Z,EAAc8Z,QAAd,yCAAsB,WAAMxQ,GAAN,gBAAAwC,EAAA,sDACZiO,EAAW,CACbra,KAAMA,EAAKqK,IACXgM,aAAczM,EAAKS,IACnBxE,OAAQ,CACJyU,QAAS,CACPzC,KAAM,IAAIG,KACVjI,eAAgB,wBAChBwG,SAAS,GAEXgE,WAAY,CACV1C,KAAM,IAAIG,KACVjI,eAAgB,wBAChBwG,SAAS,EACTiE,aAAc,yBAEhBC,QAAS,CACP5C,KAAM,IAAIG,KACVjI,eAAgB,wBAChBwG,SAAS,KAInB4D,EAAWO,KAAKL,GAvBE,2CAAtB,uDA2BiB7N,uCA9BrB,SA+B2BvG,IAAM6N,MAAMnG,6CAAsB3N,EAAKqK,IAAM,cAAe8P,GA/BvF,OA+BUzU,EA/BV,OAgCIyC,QAAQ8B,IAAIvE,GAhChB,2CAJoB,wBAuCpB,OArCA,EAAsBnF,iBAsClB,eAAC8B,EAAA,EAAD,CAAWC,SAAS,KAAKvB,MAAO,CAACoB,gBAAiB,SAAlD,UACI,cAACO,EAAA,EAAD,CAAYgJ,MAAM,SAAStK,QAAQ,KAAnC,sBACA,eAACoC,EAAA,EAAD,CAAKX,GAAI,CAAEP,SAAU,IAAKtB,OAAQ,UAAlC,UACI,cAAC,GAAD,CAAYkW,OAAQlX,EAAK2P,aACzB,uBACA,cAAC,GAAD,IACA,cAAC7E,GAAA,EAAD,IACA,uBACA,cAAC,GAAD,CAAQ4I,UAAWwG,IACnB,cAACpP,GAAA,EAAD,IACA,uBACA,cAAC,GAAD,CAAQ4I,UAAWwG,IACnB,8BCcDS,GA1EA,SAAC9a,GACd,IAAQG,EAASH,EAATG,KACR,MAAO,CACL,CACEY,KAAM6B,EACNmY,QAAS5a,EACN,cAAC,GAAD,gBAAcH,IAEd,cAAC,GAAD,gBAAiBA,KAEtB,CACEe,KAAM6B,EACNmY,QAAS,cAACtU,GAAD,gBAAYzG,KAEvB,CACEe,KAAM6B,EACNmY,QAAS,cAAC,GAAD,gBAAkB/a,KAE7B,CACEe,KAAM6B,EACNmY,QAAS,cAAC,GAAD,gBAAkB/a,KAE7B,CACEe,KAAM6B,EACNmY,QAAS,cAAC,GAAD,gBAAkB/a,KAE7B,CACEe,KAAM6B,EACNmY,QAAS,cAAC,GAAD,gBAAkB/a,KAE7B,CACEe,KAAM6B,EACNmY,QAAS,cAAC,GAAD,gBAAW/a,KAEtB,CACEe,KnCjDuB,amCkDvBga,QAAS5a,EACP,cAAC,GAAD,gBAAmBH,IAEnB,cAAC,IAAD,CAAUiB,GAAI2B,EAAiBsM,SAAO,KAG1C,CACEnO,KAAM6B,EACNmY,QAAS,cAAC,GAAD,gBAAiB/a,KAE5B,CACEe,KnCrDuB,gBmCsDvBga,QAAS,cAAC,GAAD,gBAAuB/a,KAElC,CACEe,KAAM6B,EACNmY,QAAS,cAAC,GAAD,gBAAsB/a,KAEjC,CACEe,KnChE4B,qBmCiE5Bga,QAAS,cAAC,GAAD,gBAA4B/a,KAEvC,CACEe,KAAM6B,EACNmY,QAAS,cAAC,GAAD,gBAAgB/a,KAE3B,CACEe,KAAM6B,EACNmY,QAAS,cAAC,GAAD,gBAAiB/a,KAE5B,CACEe,KAAM6B,EACNmY,QAAS,cAAC,GAAD,gBAAkB/a,OC1ElB,SAASgb,KACtB,IAAM7T,EAAWC,cACjB,EAAwBxF,qBAAWlC,GAA5BS,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QACb,EAAkCH,oBAAS,GAA3C,mBAAO4U,EAAP,KAAkBC,EAAlB,KAwBA,SAAS7P,IACP,IAAMwD,EAAcD,IAEpB,IAAKC,EAGH,OAFArI,EAAQ,MACR+G,EAAS,KACF2N,GAAa,GAGtBA,GAAa,G5BOR3O,GACJ8U,OAAO,UAAW,CACjBC,QAAS,CACPC,cAAe3S,OAGlBL,KAAKlC,IACLmC,MAAMzC,I4BZawC,MAAK,SAACjC,GAQxB,OAPKA,EAAIF,QAEPsC,QAAQrB,MAAM,4BAA6Bf,G7B1C1CZ,aAAa8V,WAAW5V,G6B6C3BsP,GAAa,GACb3N,EAAS,KACF/G,EAAQ,SAQnB,OAjDA6B,qBAAU,WACR,IAAMwG,EAAcD,IACpB,IAAKC,EACH,OAAOqM,GAAa,G5BiBjB3O,GACJ0H,IADI,UACW,CACdqN,QAAS,CACPC,cAAe3S,OAGlBL,KAAKlC,IACLmC,MAAMzC,I4BtBkBwC,MAAK,SAACjC,GAC7B,IAAKA,EAAIF,OACP,OAAO8O,GAAa,GAEtB1U,EAAQ8F,EAAIJ,KAAK3F,MACjB2U,GAAa,QAEd,IAGH7S,qBAAU,WACL9B,GAAQA,EAAK+B,Y9BjCY,I8BkC1BoG,QAAQ8B,IAAIjK,EAAK+B,aACjBiF,EAAS,iCAEV,CAAC0N,IA6BAA,EACK,cAAC,EAAD,IAIP,sBAAK/V,UAAU,MAAf,UACI,cAAC,EAAD,CAAQmG,aAAcA,EAAc9E,KAAMA,IAC1C,qBAAKe,MAAO,CAACuG,UAAW,SAAxB,SACA,cAAC,IAAD,UACGqT,GAAO,CAAE3a,OAAMuG,aAbxB,SAAsBvG,GACpBC,EAAQD,IAY4B8E,iBAAgB8H,KAAI,SAACsO,GAAD,OAChD,cAAC,IAAD,CAAwBta,KAAMsa,EAAMta,KAAMga,QAASM,EAAMN,SAA7CM,EAAMta,gB,uBCnExBoV,GAAQmF,eAEdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAACC,GAAA,EAAD,CAAevF,MAAOA,GAAtB,SACE,cAACpW,EAAD,UACE,cAACS,EAAD,UACE,cAAC,GAAD,cAMVmb,SAASC,eAAe,W","file":"static/js/main.391b205e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Loading.css\";\r\n/* import Lottie from 'react-lottie';\r\nimport animationData from '../../assets/lotties/18033-box-open.json';\r\nconst defaultOptions = {\r\n  loop: true,\r\n  autoplay: true,\r\n  animationData: animationData,\r\n  rendererSettings: {\r\n    preserveAspectRatio: 'xMidYMid slice',\r\n  },\r\n}; */\r\n\r\nconst LoadingComponent = () => {\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"spinner\">\r\n          <div className=\"bounce1\"></div>\r\n          <div className=\"bounce2\"></div>\r\n          <div className=\"bounce3\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingComponent;\r\n\r\n","export const HOMEPAGE = \"/\";\r\n\r\nexport const SIGNUPPAGE = \"/auth/signup\";\r\nexport const LOGINPAGE = \"/auth/login\";\r\nexport const PROTECTEDPAGE = \"/protected\";\r\n\r\nexport const SIGNUPSTAGES = '/signup/signup-information'\r\n\r\nexport const SUBSCRIPTIONS = '/subscriptions'\r\nexport const SUBSCRIPTIONDETAIL = '/subscriptions/:id'\r\n\r\nexport const PRODUCTS = '/products'\r\nexport const PRODUCTDETAIL = '/products/:id'\r\n\r\nexport const ORDERS = '/orders'\r\nexport const PROFILE = '/profile'\r\nexport const CHECKOUT = '/checkout'\r\n\r\n","export const ACCESS_TOKEN = \"api\";\r\nconst APP_NAME = \"snack-box\";\r\nexport const CAPITALIZED_APP =\r\n  APP_NAME[0].toUpperCase() + APP_NAME.slice(1).toLowerCase();\r\n","import {useState, createContext } from 'react';\r\nconst UserContext = createContext();\r\n\r\nfunction UserProvider(props) {\r\n    const [user, setUser] = useState()\r\n\r\n    const value = {\r\n        user,\r\n        setUser\r\n    };\r\n    return (\r\n      <UserContext.Provider value={value}>\r\n        {props.children}\r\n      </UserContext.Provider>\r\n    );\r\n}\r\n\r\nexport {UserContext, UserProvider}","import {useState, createContext } from 'react';\r\nconst CheckoutContext = createContext();\r\n\r\nfunction CheckoutProvider(props) {\r\n    const [checkoutItems, setCheckoutItems] = useState()\r\n    const [total, setTotal] = useState(0)\r\n\r\n    const value = {\r\n        checkoutItems,\r\n        setCheckoutItems,\r\n        total,\r\n        setTotal\r\n    };\r\n\r\n    return (\r\n      <CheckoutContext.Provider value={value}>\r\n        {props.children}\r\n      </CheckoutContext.Provider>\r\n    );\r\n}\r\n\r\nexport {CheckoutContext, CheckoutProvider}","import React from 'react'\r\nimport { Button } from '@mui/material'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction NavLinkIcon(props) {\r\n    const {text, path, Icon} = props\r\n\r\n    return (\r\n        <Link to={path} style={{margin: '0 10px', color: '#8f8f8f', textDecoration: 'none' }}>\r\n            <Button variant=\"text\" startIcon={<Icon/>} color={props.color || 'inherit'} className='navlink' size={props.size || 'medium'}>\r\n                {text}\r\n            </Button>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default NavLinkIcon\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport { Link, NavLink, useNavigate, Navigate, useHistory  } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\nimport * as PATHS from \"../../utils/paths\";\r\nimport * as CONSTS from \"../../utils/consts\";\r\nimport * as CONFIG from '../../config/config'\r\nimport {UserContext} from '../../context/UserContext.js'\r\nimport { CheckoutContext } from \"../../context/CheckoutContext\";\r\nimport NavLinkIcon from \"../NavLinkIcon\";\r\n\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport {\r\n  AccountBox, \r\n  ShoppingCart, \r\n  Login, \r\n  Logout, \r\n  AppRegistration, \r\n  Home, \r\n  LocalShipping,\r\n  AddBox,\r\n  Category\r\n} from '@mui/icons-material';\r\n\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Menu,\r\n  Container,\r\n  Button,\r\n  MenuItem,\r\n  CardMedia\r\n} from '@mui/material'\r\n\r\n\r\nconst linkStyle = {color: 'white', textDecoration: 'none'}\r\n\r\nconst Navbar = (props) => {\r\n  const {user, setUser} = useContext(UserContext)\r\n  const [isInSignUpProcess, setIsInSignUpProcess] = useState(false)\r\n\r\n  const [anchorElNav, setAnchorElNav] = useState(null);\r\n\r\n  const [navchange, setNavChange] = useState(0)\r\n\r\n  useEffect(() => {\r\n    if(!user) {\r\n      setIsInSignUpProcess(false)\r\n      return;\r\n    }\r\n    if(user.signupStage <= CONFIG.MAX_SIGNUP_STAGE) {\r\n      setIsInSignUpProcess(true)\r\n    }\r\n    else {\r\n      setIsInSignUpProcess(false)\r\n    }\r\n  }, [user])\r\n\r\n  function handleSignUpStageClick() {\r\n    setNavChange(navchange+1)\r\n  }\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <AppBar position=\"fixed\" style={{backgroundColor: '#e8e8e8', filter: 'drop-shadow(0 1px 10px #696969)'}}>\r\n        <Container maxWidth=\"xl\">\r\n          <Toolbar disableGutters>\r\n            <Link to={!isInSignUpProcess ? PATHS.HOMEPAGE : PATHS.SIGNUPSTAGES} style={linkStyle}>\r\n              <Typography\r\n                variant=\"h6\"\r\n                noWrap\r\n                component=\"div\"\r\n                sx={{ mr: 5, display: { xs: 'none', md: 'flex' }, color: 'gray' }}\r\n              >\r\n              <CardMedia\r\n                component=\"img\"\r\n                style={{objectFit: 'contain', opacity: '1'}}\r\n                height=\"30\"\r\n                image={'/snackbox_logo.png'}\r\n                alt=\"snackbox logo\"\r\n              />\r\n                Snack Box\r\n              </Typography>\r\n            </Link>\r\n\r\n            <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' }, color: 'black' }}>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleOpenNavMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElNav}\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'left',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'left',\r\n                }}\r\n                open={Boolean(anchorElNav)}\r\n                onClose={handleCloseNavMenu}\r\n                sx={{\r\n                  display: { xs: 'block', md: 'none' },\r\n                }}\r\n                \r\n              >\r\n            { // if user is found and hasnt filled signup stage\r\n              !isInSignUpProcess ?\r\n              ( \r\n                <Box>\r\n                  <MenuItem onClick={handleCloseNavMenu}>\r\n                    <NavLinkIcon text={'Subscriptions'} path={PATHS.SUBSCRIPTIONS} Icon={AddBox} />\r\n                  </MenuItem>\r\n                  <MenuItem onClick={handleCloseNavMenu}>\r\n                    <NavLinkIcon text={'Products'} path={PATHS.PRODUCTS} Icon={Category} />\r\n                  </MenuItem>\r\n\r\n                  {user ? (\r\n                    <>\r\n                      <MenuItem onClick={handleCloseNavMenu}>\r\n                        <NavLinkIcon text={'Your Orders'} path={PATHS.ORDERS} Icon={LocalShipping} />\r\n                      </MenuItem>\r\n                      <MenuItem onClick={handleCloseNavMenu}>\r\n                        <NavLinkIcon text={'Profile'} path={PATHS.PROFILE} Icon={AccountBox} />\r\n                      </MenuItem>\r\n                      <MenuItem onClick={handleCloseNavMenu}>\r\n                        <NavLinkIcon text={'Checkout'} path={PATHS.CHECKOUT} color={'info'} Icon={ShoppingCart} />\r\n                      </MenuItem>\r\n                      <MenuItem onClick={handleCloseNavMenu}>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          onClick={() => props.handleLogout()}\r\n                          color=\"error\"\r\n                          startIcon={<Logout/>}\r\n                        >\r\n                          Log Out\r\n                        </Button>\r\n                      </MenuItem>\r\n                    </>\r\n                    ) : (\r\n                      <Box>\r\n                        <MenuItem>\r\n                          <NavLinkIcon text={'Sign Up'} path={PATHS.SIGNUPPAGE} color={'primary'} Icon={AppRegistration} />\r\n                        </MenuItem>\r\n                        <MenuItem>\r\n                          <NavLinkIcon text={'Login'} path={PATHS.LOGINPAGE} color={'success'} Icon={Login}/>\r\n                        </MenuItem>\r\n                      </Box>\r\n                    )\r\n                  }\r\n\r\n                </Box>\r\n              ) : (<Box></Box>)}\r\n              </Menu>\r\n\r\n\r\n            </Box>\r\n\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"div\"\r\n              sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\r\n            >\r\n              <Link to={!isInSignUpProcess ? PATHS.HOMEPAGE : PATHS.SIGNUPSTAGES} style={{color: 'gray', textDecoration: 'none'}}>\r\n                Snack Box\r\n              </Link>\r\n            </Typography>\r\n\r\n            <Box  sx={{ flexGrow: 0, display: { xs: 'flex', md: 'none' } }}>\r\n              {user ? (\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    onClick={() => props.handleLogout()}\r\n                    color=\"error\"\r\n                    size={'small'}\r\n                    startIcon={<Logout/>}\r\n                >\r\n                  \r\n                </Button>\r\n\r\n              ) : (\r\n                <NavLinkIcon text={'Login'} path={PATHS.LOGINPAGE} color={'success'} Icon={Login}/>\r\n              )}\r\n            </Box>\r\n\r\n\r\n          {/**\r\n          \r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={() => props.handleLogout()}\r\n                  color=\"error\"\r\n                  startIcon={<Logout/>}\r\n                >\r\n                  Log Out\r\n                </Button>\r\n          \r\n           */}\r\n            { // if no user is found and not in form\r\n              !isInSignUpProcess ?\r\n              ( \r\n                <>\r\n                  <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n                    <NavLinkIcon text={'Subscriptions'} path={PATHS.SUBSCRIPTIONS}Icon={AddBox} />\r\n                    <NavLinkIcon text={'Products'} path={PATHS.PRODUCTS} Icon={Category} />\r\n                  </Box>\r\n                </>\r\n              ) : (<></>)}\r\n\r\n\r\n            { // if user is found and hasnt filled signup stage\r\n              isInSignUpProcess ?\r\n              ( \r\n                <>\r\n                  <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n\r\n                  </Box>\r\n                </>\r\n              ) : (<></>)\r\n            }\r\n\r\n            <Box sx={{ flexGrow: 0, display: { xs: 'none', md: 'flex' } }} >\r\n            {user ? (\r\n                <>\r\n                {\r\n                  !isInSignUpProcess ? (\r\n                    <>\r\n                      <NavLinkIcon text={'Your Orders'} path={PATHS.ORDERS} Icon={LocalShipping} />\r\n                      <NavLinkIcon text={'Profile'} path={PATHS.PROFILE} Icon={AccountBox} />\r\n                      <NavLinkIcon text={'Checkout'} path={PATHS.CHECKOUT} color={'info'} Icon={ShoppingCart}/>\r\n                    </>\r\n                  ) : (<></>)\r\n                }\r\n\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={() => props.handleLogout()}\r\n                  color=\"error\"\r\n                  startIcon={<Logout/>}\r\n                >\r\n                  Log Out\r\n                </Button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <NavLinkIcon text={'Sign Up'} path={PATHS.SIGNUPPAGE} color={'primary'} Icon={AppRegistration} />\r\n                  <NavLinkIcon text={'Login'} path={PATHS.LOGINPAGE} color={'success'} Icon={Login}/>\r\n                </>\r\n              )\r\n            }\r\n            </Box>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n\r\n/* \r\n  <nav>\r\n  <Link to={PATHS.HOMEPAGE} className=\"nav__projectName\">\r\n  {CONSTS.CAPITALIZED_APP} - created with IronLauncher\r\n  </Link>\r\n  \r\n  <div className=\"nav__authLinks\">\r\n  {props.user ? (\r\n    <>\r\n            <Link to={PATHS.PROTECTEDPAGE} className=\"authLink\">\r\n              Protected Page\r\n            </Link>\r\n            <button className=\"nav-logoutbtn\" onClick={props.handleLogout}>\r\n              Logout\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Link to={PATHS.SIGNUPPAGE} className=\"authLink\">\r\n              Signup\r\n            </Link>\r\n            <Link to={PATHS.LOGINPAGE} className=\"authLink\">\r\n              Log In\r\n            </Link>\r\n          </>\r\n        )}\r\n      </div>\r\n    </nav>  \r\n    \r\n    */\r\n","export const MAX_SIGNUP_STAGE = 4","import * as CONSTS from \"./consts\";\r\n\r\nexport function getUserToken() {\r\n  return localStorage.getItem(CONSTS.ACCESS_TOKEN);\r\n}\r\n\r\nexport function setUserToken(value) {\r\n  return localStorage.setItem(CONSTS.ACCESS_TOKEN, value);\r\n}\r\n\r\nexport function removeUserToken() {\r\n  return localStorage.removeItem(CONSTS.ACCESS_TOKEN);\r\n}\r\n","import axios from \"axios\";\r\nimport * as USER_HELPERS from \"../utils/userToken\";\r\n\r\n// here we are just maing our code look more DRY. With every backend call we must deal with errors and success states. The idea of creating these kinds of services is to make our lives easier in the components\r\nfunction internalServerError(err) {\r\n  if (err.response && err.response.data && err.response.data.errorMessage) {\r\n    return {\r\n      status: false,\r\n      errorMessage: err.response.data.errorMessage,\r\n    };\r\n  }\r\n  return {\r\n    status: false,\r\n    errorMessage: \"Internal server error. Please check your server\",\r\n  };\r\n}\r\n\r\nfunction successStatus(res) {\r\n  return {\r\n    status: true,\r\n    data: res.data,\r\n  };\r\n}\r\n\r\n// creates a basic url for every request in this file\r\nconst authService = axios.create({\r\n  baseURL: `http://localhost:5000/api/auth`,\r\n});\r\n\r\nexport function login(credentials) {\r\n  return authService\r\n    .post(\"/login\", credentials)\r\n    .then(successStatus)\r\n    .catch(internalServerError);\r\n}\r\n\r\nexport function getLoggedIn() {\r\n  return authService\r\n    .get(`session`, {\r\n      headers: {\r\n        Authorization: USER_HELPERS.getUserToken(),\r\n      },\r\n    })\r\n    .then(successStatus)\r\n    .catch(internalServerError);\r\n}\r\n\r\nexport function signup(credentials) {\r\n  return authService\r\n    .post(\"/signup\", credentials)\r\n    .then(successStatus)\r\n    .catch(internalServerError);\r\n}\r\n\r\nexport function logout() {\r\n  return authService\r\n    .delete(\"/logout\", {\r\n      headers: {\r\n        Authorization: USER_HELPERS.getUserToken(),\r\n      },\r\n    })\r\n    .then(successStatus)\r\n    .catch(internalServerError);\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"../logo.svg\";\r\nimport \"../App.css\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Home Page</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react'\r\n\r\nfunction LandingPage() {\r\n    return (\r\n        <div>\r\n            <h1>Landing Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","import React, { useState } from \"react\";\r\nimport { signup } from \"../services/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./auth.css\";\r\nimport * as PATHS from \"../utils/paths\";\r\nimport * as USER_HELPERS from \"../utils/userToken\";\r\nimport * as CONFIG from '../config/config'\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Alert from '@mui/material/Alert';\r\n\r\nimport { CircleTwoTone, Badge } from \"@mui/icons-material\";\r\n\r\nexport default function Signup({ authenticate }) {\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\"\r\n  });\r\n  const { email, password, firstName, lastName } = form;\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    return setForm({ ...form, [name]: value });\r\n  }\r\n\r\n  function handleFormSubmission(event) {\r\n    event.preventDefault();\r\n    const credentials = {\r\n      email,\r\n      password,\r\n      firstName,\r\n      lastName,\r\n    };\r\n\r\n    signup(credentials).then((res) => {\r\n      if (!res.status) {\r\n        // unsuccessful signup\r\n        console.error(\"Signup was unsuccessful: \", res.errorMessage);\r\n        return setError({\r\n          message: res.errorMessage,\r\n        });\r\n      }\r\n\r\n      // successful signup\r\n      USER_HELPERS.setUserToken(res.data.accessToken);\r\n      authenticate(res.data.user);\r\n\r\n      if(res.data.user && res.data.user.signupStage < CONFIG.MAX_SIGNUP_STAGE) {\r\n        navigate('/signup/signup-information');\r\n      } \r\n      else {\r\n        navigate(PATHS.HOMEPAGE);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n      <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'gray' }}>\r\n            \r\n          </Avatar>\r\n          <Typography component=\"h2\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleFormSubmission} noValidate sx={{ mt: 1 }}>\r\n            <Box style={{display: 'flex'}}>\r\n              <TextField\r\n                margin=\"dense\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                name=\"firstName\"\r\n                autoComplete=\"firstName\"\r\n                variant=\"standard\"\r\n                onChange={handleInputChange}\r\n                autoFocus\r\n                style={{marginRight: 2}}\r\n                InputProps={{\r\n                  startAdornment: <Badge fontSize=\"small\" color=\"action\" sx={{mr: 1}}/>\r\n                }}\r\n              />\r\n              <TextField\r\n                margin=\"dense\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lastName\"\r\n                onChange={handleInputChange}\r\n                style={{marginLeft: 2}}\r\n              />\r\n            </Box>\r\n            <TextField\r\n              margin=\"dense\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              onChange={handleInputChange}\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={handleInputChange}\r\n              autoComplete=\"current-password\"\r\n            />\r\n            {error && (\r\n              <Alert severity=\"error\">{error.message}</Alert>\r\n            )}\r\n\r\n{/*             <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\" style={{float: 'left'}}\r\n            /> */}\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 1, mb: 2 }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Already have an account? Log In\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n      </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { login } from \"../services/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Signup\";\r\nimport * as PATHS from \"../utils/paths\";\r\nimport * as USER_HELPERS from \"../utils/userToken\";\r\nimport * as CONFIG from '../config/config'\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Alert from '@mui/material/Alert';\r\n\r\nexport default function LogIn({ authenticate }) {\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = form;\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  function handleInputChange(event) {\r\n    const { name, value} = event.target;\r\n\r\n    return setForm({ ...form, [name]: value });\r\n  }\r\n\r\n  function handleFormSubmission(event) {\r\n    event.preventDefault();\r\n    const credentials = {\r\n      email,\r\n      password,\r\n    };\r\n\r\n    login(credentials).then((res) => {\r\n      if (!res.status) {\r\n        return setError({ message: res.errorMessage });\r\n      }\r\n      USER_HELPERS.setUserToken(res.data.accessToken);\r\n      authenticate(res.data.user);\r\n\r\n      if(res.data.user && res.data.user.signupStage < CONFIG.MAX_SIGNUP_STAGE) {\r\n        console.log(res.data.user.signupStage)\r\n        const pageRoute = {\r\n          0: 'personal-information',\r\n          1: 'snack-information',\r\n          2: 'payment-information',\r\n          3: 'subscription-information'\r\n        }\r\n        console.log('On Start nav change')\r\n        navigate('/signup/' + pageRoute[res.data.user.signupStage]);\r\n      } \r\n      else {\r\n        navigate(PATHS.HOMEPAGE);\r\n      }\r\n\r\n      //navigate(PATHS.HOMEPAGE);\r\n    });\r\n  }\r\n\r\n  return (\r\n      <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'gray' }}>\r\n            \r\n          </Avatar>\r\n          <Typography component=\"h2\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleFormSubmission} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              value={email}\r\n              onChange={handleInputChange}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={handleInputChange}\r\n              autoComplete=\"current-password\"\r\n            />\r\n            {error && (\r\n              <Alert severity=\"error\">{error.message}</Alert>\r\n            )}\r\n\r\n{/*             <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\" style={{float: 'left'}}\r\n            /> */}\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 1, mb: 2 }}\r\n            >\r\n              Log In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n      </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst ProtectedPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>This page is hyper protected!</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProtectedPage;\r\n","import React from 'react'\r\n\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardActionArea from '@mui/material/CardActionArea';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Divider from '@mui/material/Divider';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ProductCard(props) {\r\n    const {_id, name, brand, image, sugars, salt, fat, price} = props.product\r\n\r\n    return (\r\n        <Card sx={{ width: 300, margin: '10px'}} raised={true}>\r\n            <CardMedia\r\n                component=\"img\"\r\n                style={{objectFit: 'contain'}}\r\n                height=\"140\"\r\n                image={image}\r\n                alt={name}\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n                <Typography gutterBottom noWrap={true} variant=\"h5\" component=\"div\">\r\n                    {name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {brand}\r\n                </Typography>\r\n\r\n                <Stack \r\n                direction=\"row\" \r\n                spacing={1}\r\n                style={{justifyContent: 'space-around', marginTop: 10}}\r\n                divider={<Divider orientation=\"vertical\" flexItem />}\r\n                >\r\n                    {sugars === 'low' ? (\r\n                        <Chip label={'sugar'} color=\"success\" variant=\"outlined\" />\r\n                    ) : sugars === 'moderate' ? (\r\n                        <Chip label={'sugar'} color=\"primary\" variant=\"outlined\" />\r\n                    ) : (\r\n                        <Chip label={'sugar'} color=\"error\" variant=\"outlined\" />\r\n                    )}\r\n\r\n                    {salt === 'low' ? (\r\n                        <Chip label={'salt'} color=\"success\" variant=\"outlined\" />\r\n                    ) : salt === 'moderate' ? (\r\n                        <Chip label={'salt'} color=\"primary\" variant=\"outlined\" />\r\n                    ) : (\r\n                        <Chip label={'salt'} color=\"error\" variant=\"outlined\" />\r\n                    )}\r\n\r\n                    {fat === 'low' ? (\r\n                        <Chip label={'fat'} color=\"success\" variant=\"outlined\" />\r\n                    ) : fat === 'moderate' ? (\r\n                        <Chip label={'fat'} color=\"primary\" variant=\"outlined\" />\r\n                    ) : (\r\n                        <Chip label={'fat'} color=\"error\" variant=\"outlined\" />\r\n                    )}\r\n                </Stack>\r\n\r\n                <Divider style={{margin: '5px 0'}}/>\r\n                <Link to={'/products/' + _id} style={{textDecoration: 'none'}}>\r\n                    <Button\r\n                    variant=\"outlined\"\r\n                    style={{float: 'right', margin: '5px 0'}}\r\n                    >\r\n                    See more\r\n                    </Button>\r\n                </Link>\r\n                <Typography variant=\"h5\" align=\"left\" color=\"text.secondary\" sx={{mt: 0, p: 0}}>\r\n                    {price} €\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ProductCard\r\n","import React, {useEffect, useState} from 'react'\r\nimport Loading from '../components/Loading/index'\r\nimport ProductCard from '../components/ProductCard'\r\nimport axios from 'axios'\r\nimport { Pagination, Box } from '@mui/material'\r\n\r\n\r\nfunction ProductPage() {\r\n    const [products, setProducts] = useState([])\r\n    const [itemCount, setItemCount] = useState(0)\r\n    const [index, setIndex] = useState(1)\r\n\r\n    useEffect(() => {\r\n        (async() => {\r\n            const base = process.env.REACT_APP_API_BASE_URL\r\n            const response = await axios.post(base + '/products', {page: 0})\r\n            console.log(response)\r\n            setProducts(response.data.products)\r\n            setItemCount(response.data.itemCount)\r\n        })()\r\n    }, [])\r\n    \r\n    async function handlePaginateChange(e) {\r\n        setProducts([])\r\n        const page = e.target.innerText\r\n        setIndex(Number(page))\r\n        const base = process.env.REACT_APP_API_BASE_URL\r\n        const response = await axios.post(base + '/products', {page})\r\n        console.log(response)\r\n        setProducts(response.data.products)\r\n    }\r\n\r\n    if(!products.length) {\r\n        return <Loading></Loading>\r\n    } \r\n\r\n    return (\r\n        <Box>\r\n            <div \r\n            style={{\r\n                    display: 'flex', \r\n                    flexWrap: 'wrap', \r\n                    justifyContent: 'center', \r\n                    alignItems: 'flex-start',\r\n                    width: '80%', \r\n                    margin: '0 auto',\r\n                    height: '100%'\r\n                }}\r\n            >\r\n                {\r\n                    products.map(product => {\r\n                        return <ProductCard key={product._id} product={product}/>\r\n                    })\r\n                }\r\n\r\n            </div>\r\n            <Pagination \r\n            count={itemCount} \r\n            boundaryCount={2}\r\n            onChange={handlePaginateChange} \r\n            page={index} \r\n            color=\"primary\" \r\n            hidePrevButton \r\n            hideNextButton\r\n            style={{backgroundColor: 'transparent', margin: '30px'}}/>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ProductPage\r\n","import axios from 'axios'\r\nimport React, {useState, useEffect} from 'react'\r\nimport { useParams } from 'react-router'\r\nimport Loading from '../components/Loading/index'\r\nimport { \r\n    Container, \r\n    Grid, \r\n    Typography, \r\n    TableContainer,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody, \r\n    Chip,\r\n} from '@mui/material'\r\n\r\nconst gridItemStyle = {borderRadius: '0px', border: '0px solid #9c9c9c', padding: '10px'}\r\n\r\nfunction ProductDetailPage() {\r\n    const [product, setProduct] = useState(null)\r\n    const params = useParams()\r\n\r\n    useEffect(() => {\r\n        (async() => {\r\n            const base_url = process.env.REACT_APP_API_BASE_URL\r\n            const response = await axios.get(base_url + '/products/' + params.id)\r\n            console.log(response.data)\r\n            setProduct(response.data)\r\n        })()\r\n    }, [])\r\n\r\n    if(!product) {\r\n        return <Loading></Loading>\r\n    }\r\n\r\n    return (\r\n        <Container fixed style={{backgroundColor: '#fafafa', padding: '30px'}}>\r\n            <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n\r\n                <Grid item md={8} style={{backgroundColor: 'white', borderRadius: '10px'}}>\r\n                    <img src={product.image} alt={product.name}></img>\r\n                </Grid>\r\n\r\n                <Grid item md={4} style={gridItemStyle}>\r\n                    <Typography align=\"left\" variant=\"h3\" component=\"h3\">\r\n                        Product details\r\n                    </Typography>\r\n                    <br/><br/>\r\n                    <Typography align=\"left\" variant=\"h6\" component=\"h4\">\r\n                        {product.name}\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography align=\"left\" variant=\"subtitle1\" component=\"h3\">\r\n                        {product.brand}\r\n                    </Typography>\r\n                    <br/><br/>\r\n\r\n                    <Typography variant=\"h5\" align=\"right\" color=\"text.secondary\" sx={{m: 1}}>\r\n                        {product.price} €\r\n                     </Typography>\r\n\r\n                </Grid>\r\n\r\n                <Grid item md={4} style={gridItemStyle}>\r\n                    <Typography variant=\"h6\" component=\"h3\">\r\n                        Nutrition Table\r\n                    </Typography>\r\n                    <TableContainer style={{backgroundColor: '#f0f0f0', borderRadius: '10px'}}>\r\n                        <Table aria-label=\"simple table\">\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell align=\"center\">Value</TableCell>\r\n                                <TableCell align=\"center\">Unit</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                { //Loop through nutritions\r\n                                    Object.keys(product.nutrtionTable).map((nutrit, index) => {\r\n                                        if(index % 2 === 1) {\r\n                                        return ( \r\n                                            <TableRow key={nutrit + index}>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    { Object.keys(product.nutrtionTable)[index-1] }\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    { \r\n                                                        Object.values(product.nutrtionTable)[index-1].toFixed(2) \r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    { product.nutrtionTable[nutrit]}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                            )\r\n                                        }\r\n                                    })\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n                \r\n                <Grid item md={5} style={gridItemStyle}>\r\n                    <Typography variant=\"h6\" component=\"h3\">\r\n                        Ingredients\r\n                    </Typography>\r\n                    {\r\n                        product.ingredients\r\n                        .replace(/[^a-zA-Z,]/g, ' ')\r\n                        .split(',')\r\n                        .map((ingredient, index) => {\r\n                            return (\r\n                                <Chip key={ingredient + index} label={ingredient} color=\"primary\" style={{margin: 3}}/>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n\r\n                <Grid item md={3} style={gridItemStyle}>\r\n                    <Typography variant=\"h6\" component=\"h3\">\r\n                        Other\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" component=\"h3\">\r\n                        <Chip label={'Fat: ' + product.fat} color=\"success\" style={{margin: 3}}/> \r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" component=\"h3\">\r\n                        <Chip label={'Nutri Score: ' + product.nutriScore} color=\"success\" style={{margin: 3}}/> \r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" component=\"h3\">\r\n                        \r\n                        <Chip label={'Contains Palm Oil:' + product.palmOil} color=\"success\" style={{margin: 3}}/> \r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" component=\"h3\">\r\n                        <Chip label={'Salt: ' + product.salt} color=\"success\" style={{margin: 3}}/> \r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" component=\"h3\">\r\n                        <Chip label={'Salty: ' + product.salty} color=\"success\" style={{margin: 3}}/> \r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" component=\"h3\">\r\n                        <Chip label={'Saturated Fat: ' + product.saturatedFat} color=\"success\" style={{margin: 3}}/> \r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" component=\"h3\">\r\n                        <Chip label={'Sugars: ' + product.sugars} color=\"success\" style={{margin: 3}}/> \r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" component=\"h3\">\r\n                        <Chip label={'Sweet: ' + product.sweet} color=\"success\" style={{margin: 3}}/> \r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" component=\"h3\">\r\n                        <Chip label={'Vegan: ' + product.vegan} color=\"success\" style={{margin: 3}}/> \r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" component=\"h3\">\r\n                        <Chip label={'Vegetarian: ' + product.vegetarian} color=\"success\" style={{margin: 3}}/> \r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProductDetailPage\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport { TextField, Button, Box, Grid, Alert, Container, Typography, InputAdornment, FormControl, InputLabel, Input, Divider, } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport { AccountCircle, AddCircle, Badge, BadgeOutlined, EditRoad, House, LocationCity, MarkunreadMailbox } from '@mui/icons-material';\r\nimport { useNavigate } from \"react-router-dom\";\r\nfunction InfoPersonal(props) {\r\n    const navigation = useNavigate()\r\n    const {user, setUser} = useContext(UserContext)\r\n    \r\n    const [form, setForm] = useState({\r\n        firstName: user?.firstName,\r\n        lastName: user?.lastName,\r\n        city: user.adressInfo?.city,\r\n        postalCode: user.adressInfo?.postalCode,\r\n        street: user.adressInfo?.street,\r\n        houseNumber: user.adressInfo?.houseNumber,\r\n        additionalInfo: user.adressInfo?.additionalInfo\r\n    }) \r\n    \r\n    const [error, setError] = useState()\r\n    \r\n    function handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        setError()\r\n        return setForm({ ...form, [name]: value });\r\n    }\r\n    \r\n    async function handleFormSubmit(e) {\r\n        if(!form.city || !form.postalCode || !form.street || !form.houseNumber) {\r\n            setError('Please enter all required values *')\r\n            return\r\n        }\r\n        \r\n        if(props.showNameEdit) {\r\n            props.onFormSubmit(e, {\r\n                signupStage: 10, \r\n                firstName: form.firstName, \r\n                lastName: form.lastName,\r\n                adressInfo: form\r\n            })\r\n        }\r\n        else {\r\n            props.onFormSubmit(e, {signupStage: 10, adressInfo: form})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography align=\"center\" variant=\"body1\" gutterBottom>\r\n                Adress Information\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n                {\r\n                    props.showNameEdit && (\r\n                        <>\r\n                        <Grid item xs={12}>\r\n                            <FormControl variant=\"standard\" style={{margin: '10px'}} >\r\n                                <InputLabel>\r\n                                    First Name\r\n                                </InputLabel>\r\n                                <Input\r\n                                defaultValue={user?.firstName}  \r\n                                autoFocus \r\n                                onChange={handleInputChange} \r\n                                label=\"First Name\" \r\n                                name=\"firstName\"\r\n                                startAdornment={\r\n                                    <InputAdornment position=\"start\">\r\n                                        <Badge fontSize=\"medium\"/>\r\n                                    </InputAdornment>\r\n                                }\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl variant=\"standard\" style={{margin: '10px'}} >\r\n                                <InputLabel>\r\n                                    Last Name\r\n                                </InputLabel>\r\n                                <Input\r\n                                defaultValue={user?.lastName} \r\n                                size='small' \r\n                                onChange={handleInputChange} \r\n                                label=\"Last Name\" \r\n                                name=\"lastName\"\r\n                                startAdornment={\r\n                                    <InputAdornment position=\"start\">\r\n                                        <BadgeOutlined fontSize=\"medium\"/>\r\n                                    </InputAdornment>\r\n                                }\r\n                                />\r\n                            </FormControl>\r\n\r\n                            <Divider/>  \r\n                        </Grid>\r\n                        </>\r\n                    )\r\n                }\r\n                <Grid item xs={12}>\r\n                    <FormControl variant=\"standard\" style={{margin: '10px'}} >\r\n                        <InputLabel style={{color: 'Highlight'}}>\r\n                            City *\r\n                        </InputLabel>\r\n                        <Input\r\n                        defaultValue={user.adressInfo?.city} \r\n                        size='small' \r\n                        autoFocus \r\n                        required \r\n                        onChange={handleInputChange} \r\n                        label=\"City\" \r\n                        name=\"city\"\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <LocationCity fontSize=\"medium\"/>\r\n                            </InputAdornment>\r\n                        }\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl variant=\"standard\" style={{margin: '10px'}} >\r\n                        <InputLabel style={{color: 'Highlight'}}>\r\n                            Postal code *\r\n                        </InputLabel>\r\n                        <Input\r\n                        defaultValue={user.adressInfo?.postalCode} \r\n                        required \r\n                        onChange={handleInputChange} \r\n                        label=\"Postal code\" \r\n                        name=\"postalCode\"\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <MarkunreadMailbox fontSize=\"medium\"/>\r\n                            </InputAdornment>\r\n                        }\r\n                        />\r\n                    </FormControl>\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <FormControl variant=\"standard\" style={{margin: '10px'}} >\r\n                        <InputLabel style={{color: 'Highlight'}}>\r\n                            Street *\r\n                        </InputLabel>\r\n                        <Input\r\n                        defaultValue={user.adressInfo?.street}   \r\n                        required \r\n                        onChange={handleInputChange} \r\n                        label=\"Street\" \r\n                        name=\"street\"\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <EditRoad fontSize=\"medium\"/>\r\n                            </InputAdornment>\r\n                        }\r\n                        />\r\n                    </FormControl>\r\n\r\n                    <FormControl variant=\"standard\" style={{margin: '10px'}} >\r\n                        <InputLabel style={{color: 'Highlight'}}>\r\n                            House Number *\r\n                        </InputLabel>\r\n                        <Input\r\n                        defaultValue={user.adressInfo?.houseNumber}  \r\n                        required \r\n                        onChange={handleInputChange} \r\n                        label=\"House number\" \r\n                        name=\"houseNumber\"\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <House fontSize=\"medium\"/>\r\n                            </InputAdornment>\r\n                        }\r\n                        />\r\n                    </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <FormControl variant=\"standard\">\r\n                        <InputLabel>\r\n                            Additional information\r\n                        </InputLabel>\r\n                        <Input\r\n                        defaultValue={user.adressInfo?.additionalInfo}  \r\n                        onChange={handleInputChange} \r\n                        multiline\r\n                        maxRows={5}\r\n                        label=\"Additional info\" \r\n                        name=\"additionalInfo\"\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <AddCircle fontSize=\"medium\"/>\r\n                            </InputAdornment>\r\n                        }\r\n                        />\r\n                    </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                        {\r\n                            error ? (\r\n                                <Alert style={{maxWidth: '500px', margin: '0 auto'}} variant=\"filled\" severity=\"error\">\r\n                                    {error}\r\n                                </Alert>\r\n                            ) : (<></>)\r\n                        }\r\n\r\n                        <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        onClick={handleFormSubmit}\r\n                        sx={{ mt: 1, mb: 2 }}\r\n                        >\r\n                        Save\r\n                        </Button>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoPersonal\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport { Button, Alert, Container, Slider, Typography, ToggleButtonGroup, ToggleButton, Checkbox, FormControlLabel, TableContainer, Paper, TableBody, TableRow, TableCell, Grid, Divider } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport { Box } from '@mui/system';\r\n\r\nfunction InfoSnacks(props) {\r\n    const {user, setUser} = useContext(UserContext)\r\n    const [error, setError] = useState()\r\n    const [form, setForm] = useState({\r\n        perDay: 'not-often',\r\n        amountPeople: 1,\r\n        sweet: false,\r\n        salty: false,\r\n        organic: false,\r\n        vegan: false,\r\n        vegetarian: false,\r\n    }) \r\n    const [alignment, setAlignment] = useState('not-often');\r\n\r\n    const handleAlignmentChange = (event, newAlignment) => {\r\n        setAlignment(newAlignment);\r\n        handleInputChange(event, 'perDay')\r\n    };\r\n\r\n    function handleInputChange(event, nameTemp=null) {\r\n        let { name } = event.target;\r\n        \r\n        if(!nameTemp) {\r\n            name = nameTemp\r\n        }\r\n        \r\n        setError()\r\n        return setForm({ ...form, [name]: event.target.value });\r\n    }\r\n\r\n    function handleCheckBoxChange(event) {\r\n        setError()\r\n        return setForm({ ...form, [event.target.name]: event.target.checked })\r\n    }\r\n\r\n    async function handleFormSubmit(e) {\r\n        props.onFormSubmit(e, {snackInfo: form, signupStage: 1})\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\">\r\n            <Typography align=\"center\" variant=\"body1\" gutterBottom>\r\n                What snacks do you like?\r\n            </Typography>\r\n            <Divider/>\r\n            <Grid container sx={{p: 2}}>\r\n                <Grid item xs={4}>\r\n                    <Typography align=\"left\" id=\"input-slider\" gutterBottom>\r\n                        How often do you snack a day?\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <ToggleButtonGroup\r\n                    style={{float: 'right'}}\r\n                    color=\"primary\"\r\n                    exclusive\r\n                    value={alignment}\r\n                    name='perDay'\r\n                    onChange={handleAlignmentChange}\r\n                    size=\"small\"\r\n                    >\r\n                        <ToggleButton name='perDay' value=\"not-often\">not often</ToggleButton>\r\n                        <ToggleButton name='perDay' value=\"often\">often</ToggleButton>\r\n                        <ToggleButton name='perDay' value=\"all-the-time\">All the time</ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider/>\r\n\r\n            <Grid container sx={{p: 2}}>\r\n                <Grid item xs={8}>\r\n                    <Typography align=\"left\" id=\"input-slider\" gutterBottom>\r\n                        How many snack partners do you have?\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Slider\r\n                    style={{width: '100%', float: 'right'}}\r\n                    onChange={handleInputChange}\r\n                    name=\"amountPeople\"\r\n                    defaultValue={1}\r\n                    step={1}\r\n                    marks\r\n                    min={1}\r\n                    max={8}\r\n                    valueLabelDisplay=\"auto\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Divider/>\r\n\r\n            <Grid container sx={{p: 2}}>\r\n                <Grid item xs={7}>\r\n                    <Typography align=\"left\" id=\"input-slider\" gutterBottom>\r\n                        How do you want your snacks?\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                    <Box style={{ float: 'right'}}>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox onChange={handleCheckBoxChange} name=\"sweet\" />\r\n                            }\r\n                            label=\"sweet\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox onChange={handleCheckBoxChange} name=\"salty\" />\r\n                            }\r\n                            label=\"salty\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox onChange={handleCheckBoxChange} name=\"organic\" />\r\n                            }\r\n                            label=\"organic\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider/>\r\n\r\n            <Grid container sx={{p: 2}}>\r\n                <Grid item xs={8}>\r\n                    <Typography align=\"left\" id=\"input-slider\" gutterBottom>\r\n                        Are you vegetarian or vegan?\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Box style={{ float: 'right'}}>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox onChange={handleCheckBoxChange} name=\"vegan\" />\r\n                            }\r\n                            label=\"vegan\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox onChange={handleCheckBoxChange} name=\"vegetarian\" />\r\n                            }\r\n                            label=\"vegetarian\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <br/>\r\n            {\r\n                error ? (\r\n                    <Alert style={{maxWidth: '500px', margin: '0 auto'}} variant=\"filled\" severity=\"error\">\r\n                        {error}\r\n                    </Alert>\r\n                ) : (<></>)\r\n            }\r\n            <Divider/>\r\n            <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            onClick={handleFormSubmit}\r\n            sx={{ mt: 1, mb: 2 }}\r\n            >\r\n            Save\r\n            </Button>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default InfoSnacks\r\n","import React, {useState, useEffect, useRef, useContext} from 'react'\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport axios from 'axios';\r\nimport { UserContext } from '../context/UserContext';\r\nimport { CheckoutContext } from '../context/CheckoutContext';\r\nimport { Alert, Box } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Paypal(props) {\r\n    const navigate = useNavigate()\r\n    const [success, setSuccess] = useState(false);\r\n    const [ErrorMessage, setErrorMessage] = useState(\"\");\r\n    const [orderID, setOrderID] = useState(false);\r\n\r\n    const {user, setUser} = useContext(UserContext)\r\n    const {checkoutItems} = useContext(CheckoutContext)\r\n\r\n    //sb-h1lbp9020401@personal.example.com\r\n    //Ch89+#f#\r\n    const createOrder = (data, actions) => {\r\n        const purchaseUnits = checkoutItems.map(item => {\r\n            const plan = {\r\n                reference_id: item._id,\r\n                description: item.title,\r\n                amount: {\r\n                    currency_code: \"EUR\",\r\n                    value: item.total,\r\n                },\r\n            }\r\n\r\n            return plan\r\n        })\r\n\r\n        return actions.order\r\n            .create({\r\n            purchase_units: purchaseUnits,\r\n            // not needed if a shipping address is actually needed\r\n            application_context: {\r\n                shipping_preference: \"NO_SHIPPING\",\r\n            },\r\n            })\r\n            .then((orderID) => {\r\n            setOrderID(orderID);\r\n            return orderID;\r\n            });\r\n    };\r\n\r\n    const onApprove = (data, actions) => {\r\n        return actions.order.capture().then(async function (details) {\r\n            const { payer } = details;\r\n            console.log(payer)\r\n\r\n            const base_url = process.env.REACT_APP_API_BASE_URL\r\n            const response = await axios.patch(base_url + '/user/' + user._id + '/update', {paymentInfo: {paypal: payer}})\r\n            setUser(response.data)\r\n            setSuccess(true);\r\n            props.onApprove()\r\n        });\r\n    };\r\n\r\n    const onError = (data, actions) => {\r\n        setErrorMessage(\"An Error occured with your payment \");\r\n    };\r\n\r\n\r\n    console.log(process.env.REACT_APP_PAYPAL_CLIENT_ID)\r\n    const initialOptions = {\r\n        \"client-id\": process.env.REACT_APP_PAYPAL_CLIENT_ID,\r\n        currency: \"EUR\",\r\n        intent: \"capture\",\r\n    };\r\n    const style = {\r\n        layout: \"horizontal\", \r\n        color: 'blue', \r\n        shape: 'pill', \r\n        height: 40,\r\n        tagline: false, \r\n    }\r\n\r\n    return (\r\n        <Box sx={{m: 3, maxWidth: '500px', margin: '0 auto'}}>\r\n            <PayPalScriptProvider options={initialOptions}>\r\n            <PayPalButtons createOrder={createOrder} onApprove={onApprove} style={style} />\r\n\r\n            {ErrorMessage && (\r\n                <Alert severity=\"error\">{ErrorMessage}</Alert>\r\n            )}\r\n        </PayPalScriptProvider>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Paypal\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  PaymentElement,\r\n  useStripe,\r\n  useElements\r\n} from \"@stripe/react-stripe-js\";\r\nimport { Button } from \"@mui/material\";\r\nimport Loading from './Loading/index'\r\n\r\nexport default function CheckoutForm(props) {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!stripe) {\r\n      return <Loading></Loading>;\r\n    }\r\n\r\n    const clientSecret = new URLSearchParams(window.location.search).get(\r\n      \"payment_intent_client_secret\"\r\n    );\r\n\r\n    if (!clientSecret) {\r\n      return <Loading></Loading>;\r\n    }\r\n\r\n    stripe.retrievePaymentIntent(clientSecret).then(({ paymentIntent }) => {\r\n      switch (paymentIntent.status) {\r\n        case \"succeeded\":\r\n          setMessage(\"Payment succeeded!\");\r\n          break;\r\n        case \"processing\":\r\n          setMessage(\"Your payment is processing.\");\r\n          break;\r\n        case \"requires_payment_method\":\r\n          setMessage(\"Your payment was not successful, please try again.\");\r\n          break;\r\n        default:\r\n          setMessage(\"Something went wrong.\");\r\n          break;\r\n      }\r\n    });\r\n  }, [stripe]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!stripe || !elements) {\r\n        // Stripe.js has not yet loaded.\r\n        // Make sure to disable form submission until Stripe.js has loaded.\r\n        return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    \r\n    const { error } = await stripe.confirmPayment({\r\n        elements,\r\n        confirmParams: {\r\n            // Make sure to change this to your payment completion page\r\n            return_url: \"http://localhost:3000/orders\",\r\n        },\r\n    });\r\n\r\n\r\n    // This point will only be reached if there is an immediate error when\r\n    // confirming the payment. Otherwise, your customer will be redirected to\r\n    // your `return_url`. For some payment methods like iDEAL, your customer will\r\n    // be redirected to an intermediate site first to authorize the payment, then\r\n    // redirected to the `return_url`.\r\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\r\n      setMessage(error.message);\r\n    } else {\r\n      setMessage(\"An unexpected error occured.\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n    \r\n    props.onApprove()\r\n  };\r\n\r\n  return (\r\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\r\n      <PaymentElement id=\"payment-element\" />\r\n      <Button type=\"submit\" variant=\"contained\" sx={{my: 3}} fullWidth disabled={isLoading || !stripe || !elements} id=\"submit\">\r\n        <span id=\"button-text\">\r\n          {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\r\n        </span>\r\n      </Button>\r\n      {/* Show any error or success messages */}\r\n      {message && <div id=\"payment-message\">{message}</div>}\r\n    </form>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport axios from \"axios\";\r\nimport { Box } from \"@mui/material\";\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY);\r\n\r\nfunction Stripe(props) {\r\n    const [clientSecret, setClientSecret] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        // Create PaymentIntent as soon as the page loads\r\n        (async() => {\r\n            const base_url = process.env.REACT_APP_API_BASE_URL\r\n            // populate subscription model for checkout\r\n            const payResponse = await axios.post(base_url + '/create-payment-intent', { items: [{ id: \"xl-tshirt\" }] })\r\n            setClientSecret(payResponse.data.clientSecret)\r\n            console.log(payResponse.data)\r\n        })()\r\n    }, []);\r\n\r\n    const appearance = {\r\n        theme: 'stripe',\r\n    };\r\n    const options = {\r\n        clientSecret,\r\n        appearance,\r\n    };\r\n\r\n    return (\r\n        <Box sx={{m: 3, maxWidth: '500px', margin: '0 auto'}}> \r\n            {clientSecret && (\r\n                <Elements options={options} stripe={stripePromise}>\r\n                    <CheckoutForm onApprove={props.onApprove}/>\r\n                </Elements>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Stripe\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport { Button, Alert, Container, Checkbox, FormControlLabel, Divider } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport { useNavigate } from 'react-router';\r\nimport Paypal from '../Paypal';\r\nimport Stripe from '../Stripe';\r\n\r\nfunction InfoPayment(props) {\r\n    const navigation = useNavigate()\r\n    const {user, setUser} = useContext(UserContext)\r\n    const [error, setError] = useState()\r\n    const [form, setForm] = useState({\r\n        paypal: false,\r\n        stripe: false,\r\n    }) \r\n\r\n    function handleCheckBoxChange(event) {\r\n        setError()\r\n        return setForm({ ...form, [event.target.name]: event.target.checked })\r\n    }\r\n\r\n    async function handleFormSubmit(e) {\r\n        if(!form.paypal && !form.stripe) {\r\n            setError('Please select atleast one payment option!')\r\n            return\r\n        }\r\n\r\n        props.onFormSubmit(e, {paymentInfo: form, signupStage: 10})\r\n        navigation('/')\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\">\r\n                <br/>\r\n                <Stripe/>\r\n                <Divider/>\r\n                <br/>\r\n                <Paypal/>\r\n                <br/>\r\n                <Divider/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default InfoPayment\r\n","import React, {useState, useContext, useEffect} from 'react'\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CardMedia,\r\n    Button,\r\n    Typography,\r\n    Divider,\r\n    Fab,\r\n    Box,\r\n    Container,\r\n    Grid,\r\n} from '@mui/material'\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../context/UserContext'\r\nimport axios from 'axios';\r\n\r\nfunction SubscriptionCard(props) {\r\n    const [isActive, setIsActive] = useState(false)\r\n    const {user, setUser} = useContext(UserContext)\r\n    const {_id, title, description, image, products } = props.subscription\r\n    \r\n    \r\n    // check the total amount\r\n    // THIS NEEDS TO BE DONE ON SERVER SIDE\r\n    // after a subscription gets created or updated\r\n    let total = 0\r\n    if(products.length) {\r\n        total = products.reduce((total, current) => total + current.price, 0)\r\n        total = Number(total.toFixed(2))\r\n    }\r\n\r\n    useEffect(() => {\r\n        // check on start if already subscribed\r\n        if(user.subscriptions.includes(_id)) {\r\n            setIsActive(true)\r\n        }  \r\n    }, [])\r\n\r\n    // handle adding and removing subscriptions\r\n    async function handleAddRemoveClick() {\r\n        setIsActive(!isActive)\r\n\r\n        const base_url = process.env.REACT_APP_API_BASE_URL\r\n        if(!isActive) {\r\n            const response = await axios.patch(`${base_url}/user/${user._id}/subscriptions/${_id}/add`)\r\n            setUser(response.data)\r\n        }\r\n        else {\r\n            const response = await axios.patch(`${base_url}/user/${user._id}/subscriptions/${_id}/remove`)\r\n            setUser(response.data)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card sx={{ width: 400, margin: '10px'}} raised={true}>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    style={{objectFit: 'contain'}}\r\n                    height=\"140\"\r\n                    image={image}\r\n                    alt={title}\r\n                />\r\n                <Divider />\r\n                <CardContent>\r\n                    <Typography gutterBottom noWrap={true} variant=\"h5\" component=\"div\">\r\n                        {title}\r\n                    </Typography>\r\n                    <Divider />\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {description}\r\n                    </Typography>\r\n                    <Box style={{display: 'flex', justifyContent: \"space-between\", backgroundColor: 'white', height: '40px'}}>\r\n                        <Box>\r\n                            <Link to={'/subscriptions/' + _id} style={{textDecoration: 'none'}}>\r\n                                <Button\r\n                                variant=\"outlined\"\r\n                                style={{float: 'right', margin: '0px 0', height: '40px'}}\r\n                                >\r\n                                See more\r\n                                </Button>\r\n                            </Link>\r\n                        </Box>\r\n                        <Box style={{height: '40px'}}>\r\n                            <Typography variant=\"h5\" align=\"right\" color=\"text.secondary\" style={{height: '40px', width: '100%', fontSize: '2em'}} sx={{mt: 0, p: 0}}>\r\n                                {total} €\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box>\r\n                            <Fab \r\n                            size=\"small\" \r\n                            color='primary'\r\n                            style={{height: '40px', backgroundColor: isActive ? \"#4caf50\" : \"#03a9f4\"}} \r\n                            aria-label=\"add\" \r\n                            onClick={handleAddRemoveClick}>\r\n                               {\r\n                                isActive ? (\r\n                                    <CheckIcon />\r\n                                ) : (\r\n                                    <AddIcon/>\r\n                                )\r\n                               }\r\n                            </Fab>\r\n                        </Box>\r\n                    </Box>\r\n                </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default SubscriptionCard\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport { Button, Alert, Container, Checkbox, FormControlLabel, Typography, Divider } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport { useNavigate } from 'react-router';\r\nimport Loading from '../Loading/index'\r\nimport { Box } from '@mui/system';\r\nimport SubscriptionCard from '../SubscriptionCard';\r\nimport SubscriptionCardSmall from '../SubscriptionCardSmall';\r\n\r\nfunction InfoSubscription(props) {\r\n    const navigation = useNavigate()\r\n    const {user, setUser} = useContext(UserContext)\r\n    const [error, setError] = useState()\r\n    const [form, setForm] = useState() \r\n    const [subscriptions, setSubscription] = useState()\r\n\r\n    useEffect(() => {\r\n        (async() => {\r\n            const base_url = process.env.REACT_APP_API_BASE_URL\r\n            const response = await axios.get(base_url + '/subscriptions/')\r\n            setSubscription(response.data.splice(0, 3))\r\n        })()\r\n    }, [])\r\n    \r\n    function handleCheckBoxChange(event) {\r\n        setError()\r\n        return setForm({ ...form, [event.target.name]: event.target.checked })\r\n    }\r\n\r\n    async function handleFormSubmit(e) {\r\n        props.onFormSubmit(e, {signupStage: 2})\r\n    }\r\n\r\n    if(!subscriptions) {\r\n        return <Loading></Loading>\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\">\r\n            <Typography align=\"center\" variant=\"h5\" gutterBottom>\r\n                Add a plan to your cart\r\n            </Typography>\r\n            <Divider/>\r\n            <Box alignItems=\"center\" alignSelf=\"center\" display=\"flex\" flexDirection=\"row\">\r\n                {\r\n                    subscriptions.map(subscription => {\r\n                        return (<SubscriptionCard key={subscription._id} subscription={subscription} />)\r\n                    })\r\n                }\r\n            </Box>  \r\n\r\n            <br/>\r\n            {\r\n                error ? (\r\n                    <Alert style={{maxWidth: '500px', margin: '0 auto'}} variant=\"filled\" severity=\"error\">\r\n                        {error}\r\n                    </Alert>\r\n                ) : (<></>)\r\n            }\r\n            <Divider/>\r\n            <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            onClick={handleFormSubmit}\r\n            sx={{ mt: 1, mb: 2 }}\r\n            >\r\n            Next\r\n            </Button>\r\n    </Container>\r\n    )\r\n}\r\n\r\nexport default InfoSubscription\r\n","import {\r\n    Card,\r\n    CardContent,\r\n    CardMedia,\r\n    Button,\r\n    Typography,\r\n    Divider,\r\n    Fab,\r\n    Box,\r\n    Container,\r\n    Grid,\r\n} from '@mui/material'\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\nimport React, {useContext, useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { UserContext } from '../context/UserContext'\r\nimport InfoPersonal from './SignUpStages/InfoPersonal';\r\nimport axios from 'axios';\r\n\r\nconst headerTextStyle = {fontSize: '0.8rem', opacity: '0.8'}\r\n\r\nfunction AdressInfo(props) {\r\n    const {user, setUser} = useContext(UserContext)\r\n    const [toggleEdit, setToggleEdit] = useState(false)\r\n    const {city, postalCode, street, houseNumber} = props.adress\r\n\r\n    async function handleEditSubmit(data) {\r\n        const base_url = process.env.REACT_APP_API_BASE_URL\r\n        const newData = {firstName: data.firstName, lastName: data.lastName, adressInfo: data.adressInfo}\r\n        const response = await axios.patch(base_url + '/user/' + user._id + '/update', newData)\r\n        setUser(response.data)\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Typography color=\"primary\" align=\"left\" variant=\"h6\">Delivery Adress</Typography>\r\n            <Card style={{maxWidth: '100%', border: '2px dashed #4caf50', borderRadius: '5px', padding: '10px 0', margin: '0px auto'}}>\r\n                <Grid container spacing={0.5}>\r\n                    <Grid item xs={12}>\r\n                        <Box display=\"flex\" >\r\n                            <CheckCircleIcon sx={{mx: 1, my: 0.3}} color=\"success\"/>\r\n                            <Typography align=\"left\" variant='h6' color={'green'} ><strong>{user.firstName}, {user.lastName}</strong></Typography>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sx={{mx: 5}}>\r\n                        {/* <Typography align=\"left\" variant='body2' style={headerTextStyle}><b><i>City / Postal Code</i></b></Typography> */}\r\n                        <Typography align=\"left\" variant='body1'>{city}, {postalCode}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sx={{mx: 5}}>\r\n                        {/* <Typography align=\"left\" variant='body2' style={headerTextStyle}><b><i>Street / house number</i></b></Typography> */}\r\n                        <Typography align=\"left\" variant='body1'>{street}, {houseNumber}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sx={{mx: 5}}>\r\n                        <Divider/>\r\n                        <Typography align=\"left\" variant='subtitle2'><i>Additional Info</i></Typography>\r\n                        <Typography align=\"left\" variant='body2'><i>{props.adress.additionalInfo}</i></Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n            <Typography align=\"right\" sx={{mx: 2, my: 0}}>\r\n                <Button onClick={() => setToggleEdit(!toggleEdit)} align=\"left\" sx={{mx: 3}} size='medium' variant='text' color={toggleEdit ? 'warning' : 'primary'}>\r\n                    {toggleEdit ? 'Hide' : 'Edit'}\r\n                </Button>\r\n            </Typography>\r\n            {\r\n                toggleEdit && (\r\n                    <Card style={{maxWidth: '100%', border: '1px dashed gray', borderRadius: '5px', padding: '10px 0', margin: '0 auto', marginBottom: '20px'}}>\r\n                        <InfoPersonal showNameEdit={true} onFormSubmit={(e, data) => handleEditSubmit(data)}/>\r\n                    </Card>\r\n                )\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AdressInfo\r\n","import { Stepper, Step, StepLabel, Typography, Container, Button, Box, Divider, Paper } from '@mui/material';\r\nimport React, {useState, useEffect, useContext} from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as CONFIG from '../config/config'\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport axios from 'axios';\r\n\r\nimport { CheckoutContext } from '../context/CheckoutContext';\r\nfunction CheckOut() {\r\n    const {user, setUser} = useContext(UserContext)\r\n    const {checkoutItems, setCheckoutItems, total, setTotal} = useContext(CheckoutContext)\r\n\r\n    useEffect(() => {\r\n        (async() => {\r\n            getSubscriptionData()\r\n        })()\r\n    }, [])\r\n\r\n    async function getSubscriptionData() {\r\n        const base_url = process.env.REACT_APP_API_BASE_URL\r\n        // populate subscription model for checkout\r\n        const subsResponse = await axios.get(base_url + '/user/' + user._id + '/subscriptions')\r\n        setTotal(subsResponse.data.total)\r\n        setCheckoutItems(subsResponse.data.subscriptions)\r\n    }\r\n\r\n        /**\r\n     * https://codereview.stackexchange.com/a/173668\r\n     * Returns the date of the next day. If today is friday and we are asking for next friday the friday of the next week is returned.\r\n     * @param dayOfWeek 0:Su,1:Mo,2:Tu,3:We,4:Th,5:Fr,6:Sa\r\n     */\r\n    function getNextDayOfWeek(date, dayOfWeek) {\r\n        var resultDate = new Date(date.getTime());\r\n        resultDate.setDate(date.getDate() + (7 + dayOfWeek - date.getDay() - 1) % 7 +1);\r\n        return resultDate.toLocaleDateString();\r\n    }\r\n\r\n    if(!checkoutItems) return null\r\n\r\n    return (\r\n        <Box component={Paper} sx={{minWidth: '100%', backgroundColor: '#fafafa', borderRadius: '10px', padding: '1%', margin: '10px auto', border: '0px solid gray', opacity: '0.9'}}>\r\n                <Box sx={{maxWidth: '600px', margin: '10px auto'}}>\r\n                    <Typography variant='h5'>Order Summary</Typography>\r\n                    <br/>\r\n                    <Typography align=\"left\" color=\"primary\" variant='h6'>Adress</Typography>\r\n                    <Divider/>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                        <Typography variant='subtitle1'>Fullname</Typography>\r\n                        <Typography variant='body1'><b>{user.firstName} {user.lastName}</b></Typography>\r\n                    </Box>\r\n                    {\r\n                        user?.adressInfo && (\r\n                            <>\r\n                            <Box display=\"flex\" justifyContent=\"space-between\">\r\n                                <Typography align=\"left\" variant='subtitle1'>City / Postal code</Typography>\r\n                                <Typography align=\"left\" variant='body1'><b>{user.adressInfo.city}, {user.adressInfo.postalCode}</b></Typography>\r\n                            </Box>\r\n                            <Box display=\"flex\" justifyContent=\"space-between\">\r\n                                <Typography align=\"left\" variant='subtitle1'>Street / House number</Typography>\r\n                                <Typography align=\"left\" variant='body1'><b>{user.adressInfo.street}, {user.adressInfo.houseNumber}</b></Typography>\r\n                            </Box>\r\n                            <Box display=\"flex\" justifyContent=\"space-between\">\r\n                                <Typography align=\"left\" variant='subtitle1'>Special instructions</Typography>\r\n                                <Typography align=\"left\" variant='body1'><i>{user.adressInfo.additionalInfo}</i></Typography>\r\n                            </Box>\r\n                            </>\r\n                        )\r\n                    }\r\n                    <Divider/>\r\n                    <br/>\r\n                    <Typography align=\"left\" color=\"primary\" variant='h6'>Subscription</Typography>\r\n                    <Divider/>\r\n                    {\r\n                        checkoutItems && (\r\n                            <>\r\n                                {\r\n                                    checkoutItems.map((sub, index) => {\r\n                                        return (\r\n                                            <Box key={sub._id} display=\"flex\" justifyContent=\"space-between\">\r\n                                                <Typography variant='subtitle1'>{index+1}. {sub.title}</Typography>\r\n                                                <Typography variant='body1'><b>{sub.total}€</b></Typography>\r\n                                            </Box>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <Divider/>\r\n                                <br/>\r\n                                <Typography align=\"left\" color=\"primary\" variant='h6'>Summary</Typography>\r\n                                <Divider/>\r\n                                <Box display=\"flex\" justifyContent=\"space-between\">\r\n                                    <Typography align=\"left\" variant='subtitle1'>Delivery</Typography>\r\n                                    <Typography variant='subtitle1'>9.99€</Typography>\r\n                                </Box>\r\n                                <Typography align=\"right\" variant='h5'>Total: {total}€</Typography>\r\n                                <Divider/>\r\n                                <br/>\r\n                                <Typography align=\"left\" variant='h5' style={{fontSize: '1.2em'}}>You will get your Box every <b>Friday</b>. Next delivery is <b>{getNextDayOfWeek(new Date(), 5)}</b></Typography>\r\n                                <br/>\r\n                                <Typography align=\"left\" variant='body1'><strong>* Please note that we need two working days to pack your box.</strong></Typography>\r\n                                <Typography align=\"left\" variant='body2'><i>You can always choose a different plan or unsubscribe to weekly snacks!</i></Typography>\r\n                            </>\r\n                        )\r\n                    }\r\n                </Box>\r\n            </Box>\r\n    )\r\n}\r\n\r\nexport default CheckOut\r\n","import { Stepper, Step, StepLabel, Typography, Container, Button, Box, Divider, Paper } from '@mui/material';\r\nimport React, {useState, useEffect, useContext} from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as CONFIG from '../config/config'\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport axios from 'axios';\r\n\r\nimport InfoPersonal from '../components/SignUpStages/InfoPersonal';\r\nimport InfoSnacks from '../components/SignUpStages/InfoSnacks';\r\nimport InfoPayment from '../components/SignUpStages/InfoPayment';\r\nimport InfoSubscription from '../components/SignUpStages/InfoSubscription';\r\nimport AdressInfo from '../components/AdressInfo'\r\nimport CheckOut from '../components/CheckOut';\r\nimport { CheckoutContext } from '../context/CheckoutContext';\r\nconst steps = ['Snacks', 'Plans', 'Adress'];\r\n\r\nconst emptyData = {\r\n    signupStage: 10,\r\n    adressInfo: {\r\n        city: '',\r\n        postalCode: '',\r\n        street: '',\r\n        houseNumber: '',\r\n        additionalInfo: '',\r\n    },\r\n    snackInfo: {\r\n        perDay: 'often',\r\n        amountPeople: 1,\r\n        sweet: true,\r\n        salty: true,\r\n        organic: true,\r\n        vegan: false,\r\n        vegetarian: false,\r\n    },\r\n    paymentInfo: {\r\n        paypal: false,\r\n        stripe: false,\r\n    },\r\n    subscriptions: []\r\n}\r\n\r\nfunction SignUpStages(props) {\r\n    const navigation = useNavigate()\r\n    const {user, setUser} = useContext(UserContext)\r\n    const {checkoutItems, setCheckoutItems, total, setTotal} = useContext(CheckoutContext)\r\n    \r\n    const [activeStep, setActiveStep] = useState(() => {\r\n        if(!user.signupStage) return 0;\r\n        return user.signupStage \r\n    });\r\n\r\n    async function handleFormSubmit(event, data) {\r\n        const base_url = process.env.REACT_APP_API_BASE_URL\r\n        const response = await axios.patch(base_url + '/user/' + user._id + '/update', data)\r\n        setUser(response.data)\r\n        getSubscriptionData()\r\n        setActiveStep(data.signupStage)\r\n        \r\n        if(data.signupStage > 3) {\r\n            navigation('/checkout')\r\n        }\r\n    }\r\n\r\n    async function handleSkipClick() {\r\n        const base_url = process.env.REACT_APP_API_BASE_URL\r\n        const response = await axios.patch(base_url + '/user/' + user._id + '/update', emptyData)\r\n        setActiveStep(10)\r\n        setUser(response.data)\r\n        navigation('/')\r\n    }\r\n\r\n    \r\n    async function getSubscriptionData() {\r\n        const base_url = process.env.REACT_APP_API_BASE_URL\r\n        // populate subscription model for checkout\r\n        const subsResponse = await axios.get(base_url + '/user/' + user._id + '/subscriptions')\r\n        setTotal(subsResponse.data.total)\r\n        setCheckoutItems(subsResponse.data.subscriptions)\r\n    }\r\n\r\n    return (\r\n        <Container style={{marginTop: '100px'}}>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n\r\n                    return (\r\n                        <Step key={label} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n            <Box component={Paper} sx={{width: '100%', borderRadius: '10px', padding: '1%', margin: '10px auto'}}>\r\n                {\r\n                    user.signupStage === 0 ? (\r\n                        <Box sx={{maxWidth: '800px', margin: '10px auto'}}>\r\n                            <InfoSnacks onFormSubmit={handleFormSubmit}/>\r\n                        </Box>\r\n                    ) : (<></>)\r\n                }\r\n                {\r\n                    user.signupStage === 1 ? (\r\n                        <Box sx={{maxWidth: '1000px', margin: '10px auto'}}>\r\n                            <InfoSubscription onFormSubmit={handleFormSubmit}/>\r\n                        </Box>\r\n                    ) : (<></>)\r\n                }\r\n                {\r\n                    user.signupStage === 2 ? (\r\n                        <Box sx={{maxWidth: '800px', margin: '10px auto'}}>\r\n                            <InfoPersonal onFormSubmit={handleFormSubmit}/>\r\n                        </Box>\r\n                    ) : (<></>)\r\n                }\r\n                {\r\n                    user.signupStage === 3 ? (\r\n                        <Box sx={{maxWidth: '800px', margin: '10px auto'}}>\r\n                            <InfoPayment onFormSubmit={handleFormSubmit}/>\r\n                        </Box>\r\n                    ) : (<></>)\r\n                }\r\n                <Button onClick={handleSkipClick}>\r\n                    Skip\r\n                </Button>\r\n            </Box>\r\n\r\n            <CheckOut/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SignUpStages\r\n","import React, {useEffect, useState} from 'react'\r\nimport Loading from '../components/Loading/index'\r\nimport SubscriptionCard from '../components/SubscriptionCard'\r\nimport axios from 'axios'\r\n\r\nfunction SubscriptionPage() {\r\n    const [subscriptions, setSubscriptions] = useState([])\r\n\r\n    useEffect(() => {\r\n        (async() => {\r\n            const base = process.env.REACT_APP_API_BASE_URL\r\n            const response = await axios.get(base + '/subscriptions')\r\n            setSubscriptions(response.data)\r\n        })()\r\n    }, [])\r\n    \r\n    if(!subscriptions.length) {\r\n        return <Loading></Loading>\r\n    } \r\n\r\n    return (\r\n        <div \r\n        style={{\r\n                display: 'flex', \r\n                flexWrap: 'wrap', \r\n                justifyContent: 'center', \r\n                alignItems: 'flex-start',\r\n                width: '80%', \r\n                margin: '0 auto',\r\n                height: '100%'\r\n            }}\r\n        >\r\n            {\r\n                subscriptions.map(subscription => {\r\n                    return <SubscriptionCard key={subscription._id} subscription={subscription}/>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionPage\r\n","import axios from 'axios'\r\nimport React, {useState, useEffect, useContext} from 'react'\r\nimport { useParams, Link } from 'react-router'\r\nimport Loading from '../components/Loading/index'\r\nimport { \r\n    Container, \r\n    Grid, \r\n    Typography, \r\n    List,\r\n    Divider,\r\n    Fab,\r\n    AddIcon,\r\n} from '@mui/material'\r\nimport { UserContext } from '../context/UserContext'\r\nimport ProductCard from '../components/ProductCard'\r\n\r\nfunction SubscriptionDetailPage() {\r\n    const {id} = useParams()\r\n    const [subscription, setSubscriptions] = useState(null)\r\n\r\n    useEffect(() => {\r\n        (async() => {\r\n            window.scrollTo(0, 0)\r\n            const base_url = process.env.REACT_APP_API_BASE_URL\r\n            const response = await axios.get(base_url + '/subscriptions/' + id)\r\n            console.log(response.data)\r\n            setSubscriptions(response.data)\r\n        })()\r\n    }, [])\r\n\r\n    if(!subscription) {\r\n        return <Loading></Loading>\r\n    }\r\n\r\n    let total = subscription.products.reduce((total, current) => total + current.price, 0)\r\n    total = Number(total.toFixed(2))\r\n\r\n    return (\r\n        <Container fixed style={{backgroundColor: '#fafafa', padding: '30px'}}>\r\n            <Grid container spacing={2}>\r\n\r\n                <Grid item xs={8} >\r\n                    <img style={{objectFit: 'fill', heigh: '100%', width: '100%', borderRadius: '20px'}} src={subscription.image} alt={subscription.title}></img>\r\n                    <Typography variant=\"h4\" component=\"h3\">\r\n                        {subscription.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" component=\"h3\">\r\n                        {subscription.description}\r\n                    </Typography>\r\n                    <br/>\r\n                </Grid>\r\n\r\n                <Grid item xs={4}>\r\n                    <List\r\n                    sx={{\r\n                        width: '100%',\r\n                        position: 'relative',\r\n                        overflow: 'auto',\r\n                        maxHeight: 400,\r\n                        '& ul': { padding: 0 },\r\n                    }}\r\n                    subheader={<li />}\r\n                    >\r\n                    {\r\n                        subscription.products.map((prod, index) => {\r\n                            return (\r\n                                <>\r\n                                    <div style={{maxWidth: '100%', height: '25px'}}>\r\n                                        <Typography noWrap={true} style={{maxWidth: '80%', height: '25px', float:'left'}} variant=\"body1\" component=\"p\">\r\n                                            <strong>{index+1}.</strong> {prod.name}\r\n                                        </Typography>\r\n                                        <Typography style={{maxWidth: '20%', height: '25px', float:'right'}} color='primary' variant=\"body1\" component=\"p\">\r\n                                        <strong>{prod.price} €</strong>\r\n                                        </Typography>\r\n                                    </div> \r\n                                    <Divider/>\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n                    </List>\r\n                    <br/>\r\n                    <Divider/>\r\n                    <Typography align=\"right\" variant=\"h6\" component=\"h3\">\r\n                        Total: {total} €\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} style={{borderTop: '2px solid #ababab'}}>\r\n                    <Typography align=\"center\" variant=\"h6\" component=\"h3\">\r\n                        Products Inside\r\n                    </Typography>\r\n                    <Divider/>\r\n                    <Container \r\n                    style={{minHeight:'300px', display: 'flex', flexWrap: 'wrap', justifyContent:'space-between'}}\r\n                    >\r\n                        {subscription.products.map(prod => {\r\n                            return <ProductCard product={prod}/>\r\n                        })}\r\n                    </Container>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SubscriptionDetailPage\r\n","\r\nimport { \r\n    Container,\r\n    Box,\r\n    Stepper,\r\n    Step,\r\n    StepLabel, \r\n    Typography,\r\n    StepContent,\r\n    Button,\r\n    Paper,\r\n    Divider,\r\n    CardMedia,\r\n} from '@mui/material'\r\nimport React, {useState, useEffect, useContext} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../context/UserContext';\r\nimport Loading from '../components/Loading/index'\r\nimport SubscriptionCard from '../components/SubscriptionCard';\r\nimport SubscriptionCardSmall from '../components/SubscriptionCardSmall';\r\n\r\nconst steps = [\r\n    {\r\n      label: 'We pack your Box',\r\n      date: '12.11.1994 11:00',\r\n      description: `We just packed your box. We will send it to you as fast as possible. As soon as it is on the way you will get a tracking link.`,\r\n    },\r\n    {\r\n        label: 'Your snacks are on the way!',\r\n        date: '13.11.1994 11:00',\r\n        description: `Snacks are coming to you! In 1-2 business day your box will arive. We provided the tracking link for you! `,\r\n        trackingLink: 'https://github.com/JohannesSattler/snack-box'\r\n    },\r\n    {\r\n        label: 'Snacks have arrived!',\r\n        date: '15.11.1994 11:00',\r\n        description: `Oh boi, Oh boi. Turn on Netflix and dont go outside anymore. Next snacks will arrive soon!`,\r\n      },\r\n];\r\n\r\nfunction OrdersPage() {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [subscription, setSubscription] = useState(null)\r\n    const {user, setUser} = useContext(UserContext)\r\n    \r\n    useEffect(() => {\r\n        (async() => {\r\n            // CHANGE that to the current subscription model the user has defined\r\n            const someID = '61b1d9ad5e7350d8f9564ecb'\r\n            // get the current subscription model\r\n            const base_url = process.env.REACT_APP_API_BASE_URL\r\n            const response = await axios.get(base_url + '/subscriptions/' + someID)\r\n            console.log(response.data)\r\n            setSubscription(response.data)\r\n        })()\r\n    }, [])\r\n\r\n    if(!subscription) {\r\n        return <Loading></Loading>\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{backgroundColor: 'white'}}>\r\n            <Typography align=\"center\" variant=\"h3\">Your Orders</Typography>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OrdersPage\r\n","import {\r\n    Card,\r\n    CardContent,\r\n    CardMedia,\r\n    Button,\r\n    Typography,\r\n    Divider,\r\n    Fab,\r\n    Box,\r\n    Container,\r\n    Grid,\r\n} from '@mui/material'\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\nimport React, {useContext, useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { UserContext } from '../context/UserContext'\r\nimport InfoPersonal from './SignUpStages/InfoPersonal';\r\nimport axios from 'axios';\r\nimport InfoSnacks from './SignUpStages/InfoSnacks';\r\n\r\nfunction SnackInfo() {\r\n    const {user, setUser} = useContext(UserContext)\r\n    const [toggleEdit, setToggleEdit] = useState(false)\r\n    \r\n    async function handleEditSubmit(data) {\r\n        delete data.signupStage\r\n        const base_url = process.env.REACT_APP_API_BASE_URL\r\n        const response = await axios.patch(base_url + '/user/' + user._id + '/update', data)\r\n        setUser(response.data)\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Typography color=\"primary\" align=\"left\" variant=\"h6\">Snacks</Typography>\r\n            <Card style={{maxWidth: '100%', border: '2px dashed #4893e8', borderRadius: '5px', padding: '10px 10px', margin: '0px auto'}}>\r\n                <Grid container sx={{p: 1, px: 2}}>\r\n                    <Grid item xs={3}>\r\n                        <Typography align=\"left\" id=\"input-slider\" gutterBottom>\r\n                            Snacks per day\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <Typography align=\"left\" id=\"input-slider\" gutterBottom>\r\n                            <b>{user.snackInfo.perDay}</b>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider/>\r\n                <Grid container sx={{p: 1, px: 2}}>\r\n                    <Grid item xs={3}>\r\n                        <Typography align=\"left\" id=\"input-slider\" gutterBottom>\r\n                            Snack partners\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <Typography align=\"left\" id=\"input-slider\" gutterBottom>\r\n                            <b>{user.snackInfo.amountPeople}</b>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider/>\r\n                <Grid container sx={{p: 1, px: 2}}>\r\n                    <Grid item xs={3}>\r\n                        <Typography align=\"left\" id=\"input-slider\" gutterBottom>\r\n                            Type of snacks\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <Typography align=\"left\" id=\"input-slider\" gutterBottom>\r\n                            <b>{user.snackInfo.sweet ? \"sweet\" : \"\"}{user.snackInfo.salty ? \", salty\" : \"\"}{user.snackInfo.organic ? \", organic\" : \"\"}</b>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider/>\r\n                <Grid container sx={{p: 1, px: 2}}>\r\n                    <Grid item xs={3}>\r\n                        <Typography align=\"left\" id=\"input-slider\" gutterBottom>\r\n                            Vegan or vegetarian\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <Typography align=\"left\" id=\"input-slider\" gutterBottom>\r\n                            <b>{user.snackInfo.vegan ? \"vagan\" : \"\"}{user.snackInfo.vegetarian ? \", vegetarian\" : \"\"}</b>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n            <Typography align=\"right\" sx={{mx: 2, my: 0}}>\r\n                <Button onClick={() => setToggleEdit(!toggleEdit)} align=\"left\" sx={{mx: 3}} size='medium' variant='text' color={toggleEdit ? 'warning' : 'primary'}>\r\n                    {toggleEdit ? 'Hide' : 'Edit'}\r\n                </Button>\r\n            </Typography>\r\n            {\r\n                toggleEdit && (\r\n                    <Card style={{maxWidth: '100%', border: '1px dashed gray', borderRadius: '5px', padding: '10px 0', margin: '0 auto', marginBottom: '20px'}}>\r\n                        <InfoSnacks onFormSubmit={(e, data) => handleEditSubmit(data)}/>\r\n                    </Card>\r\n                )\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SnackInfo\r\n","import { \r\n    Container,\r\n    Box,\r\n    Stepper,\r\n    Step,\r\n    StepLabel, \r\n    Typography,\r\n    StepContent,\r\n    Button,\r\n    Paper,\r\n    Divider,\r\n    Link,\r\n} from '@mui/material'\r\nimport React, {useState, useEffect, useContext} from 'react'\r\nimport { UserContext } from '../context/UserContext';\r\nimport InfoPersonal from '../components/SignUpStages/InfoPersonal';\r\nimport InfoSnacks from '../components/SignUpStages/InfoSnacks';\r\nimport InfoPayment from '../components/SignUpStages/InfoPayment';\r\nimport AdressInfo from '../components/AdressInfo';\r\nimport SnackInfo from '../components/SnackInfo';\r\n\r\nfunction ProfilePage() {\r\n    const [editStage, setEditStage] = useState(null)\r\n    const {user, setUser} = useContext(UserContext)\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{backgroundColor: 'white'}}>\r\n            <Typography variant='h4'>Hey {user.firstName}, how are you?</Typography>\r\n            <Typography variant='subtitle1'>Here you can edit your profile</Typography>\r\n            <br/>\r\n            {/** PEROSNAL INFO*/}\r\n            <Box>\r\n                <AdressInfo adress={user.adressInfo}/>\r\n                <Divider/>\r\n            </Box>\r\n\r\n            <br/>\r\n            {/** SNACK INFO*/}\r\n            <Box >\r\n                <SnackInfo/>\r\n                <Divider/>\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProfilePage\r\n","import { \r\n    Container,\r\n    Box,\r\n    Stepper,\r\n    Step,\r\n    StepLabel, \r\n    Typography,\r\n    StepContent,\r\n    Button,\r\n    Paper,\r\n    Divider,\r\n} from '@mui/material'\r\nimport { Link } from 'react-router-dom';\r\nimport React, {useState, useEffect, useContext} from 'react'\r\nimport axios from 'axios';\r\nimport { UserContext } from '../context/UserContext';\r\nimport { CheckoutContext } from '../context/CheckoutContext';\r\nimport Loading from '../components/Loading/index'\r\nimport SubscriptionCard from '../components/SubscriptionCard';\r\nimport SubscriptionCardSmall from '../components/SubscriptionCardSmall';\r\nimport AdressInfo from '../components/AdressInfo';\r\nimport CheckOut from '../components/CheckOut';\r\nimport Paypal from '../components/Paypal';\r\nimport Stripe from '../components/Stripe';\r\n\r\n\r\nfunction CheckoutPage() {\r\n    const {user, setUser} = useContext(UserContext)\r\n    const {checkoutItems, setCheckoutItems} = useContext(CheckoutContext)\r\n\r\n    async function handlePaymentAprroved(e)  {\r\n        const orderArray = []\r\n\r\n        checkoutItems.forEach(async item => {\r\n            const newOrder = {\r\n                user: user._id,\r\n                subscription: item._id,\r\n                status: {\r\n                    packBox: {\r\n                      date: new Date(),\r\n                      additionalInfo: 'There is No Info here',\r\n                      current: true\r\n                    },\r\n                    orderOnWay: {\r\n                      date: new Date(),\r\n                      additionalInfo: 'There is No Info here',\r\n                      current: false,\r\n                      trackingLink: 'There is No Info here'\r\n                    },\r\n                    arrived: {\r\n                      date: new Date(),\r\n                      additionalInfo: 'There is No Info here',\r\n                      current: false\r\n                    }\r\n                  }\r\n            }\r\n            orderArray.push(newOrder)\r\n        })\r\n\r\n\r\n        const base_url = process.env.REACT_APP_API_BASE_URL\r\n        const response = await axios.patch(base_url + '/user/' + user._id + '/orders/add', orderArray)\r\n        console.log(response)\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{backgroundColor: 'white'}}>\r\n            <Typography align=\"center\" variant=\"h3\">Checkout</Typography>\r\n            <Box sx={{ maxWidth: 900, margin: '0 auto'}}>\r\n                <AdressInfo adress={user.adressInfo}/>\r\n                <br/>\r\n                <CheckOut/>\r\n                <Divider/>\r\n                <br/>\r\n                <Stripe onApprove={handlePaymentAprroved}/>\r\n                <Divider/>\r\n                <br/>\r\n                <Paypal onApprove={handlePaymentAprroved}/>\r\n                <br/>\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CheckoutPage\r\n","import { Navigate } from \"react-router-dom\";\r\nimport HomePage from \"../pages/HomePage\";\r\nimport LandingPage from \"../pages/LandingPage\";\r\nimport Login from \"../pages/LogIn\";\r\nimport Signup from \"../pages/Signup\";\r\nimport ProtectedPage from \"../pages/ProtectedPage\";\r\nimport ProductPage from \"../pages/ProductPage\";\r\nimport ProductDetailPage from \"../pages/ProductDetailPage\";\r\nimport SignUpStages from \"../pages/SignUpStages\";\r\nimport SubscriptionPage from \"../pages/SubscriptionPage\";\r\nimport SubscriptionDetailPage from \"../pages/SubscriptionDetailPage\";\r\nimport OrdersPage from \"../pages/OrdersPage\";\r\nimport ProfilePage from '../pages/ProfilePage';\r\nimport CheckoutPage from '../pages/CheckoutPage';\r\n\r\nimport * as PATHS from \"../utils/paths\";\r\nimport * as CONFIG from '../config/config'\r\n\r\nconst routes = (props) => {\r\n  const { user } = props;\r\n  return [\r\n    {\r\n      path: PATHS.HOMEPAGE,\r\n      element: user ? \r\n        (<HomePage {...props} />)\r\n        : \r\n        (<LandingPage {...props} />),\r\n    },\r\n    {\r\n      path: PATHS.SIGNUPPAGE,\r\n      element: <Signup {...props} />,\r\n    },\r\n    {\r\n      path: PATHS.SIGNUPSTAGES,\r\n      element: <SignUpStages {...props} />\r\n    },\r\n    {\r\n      path: PATHS.SIGNUPSTAGES,\r\n      element: <SignUpStages {...props} />\r\n    },\r\n    {\r\n      path: PATHS.SIGNUPSTAGES,\r\n      element: <SignUpStages {...props} />\r\n    },\r\n    {\r\n      path: PATHS.SIGNUPSTAGES,\r\n      element: <SignUpStages {...props} />\r\n    },\r\n    {\r\n      path: PATHS.LOGINPAGE,\r\n      element: <Login {...props} />,\r\n    },\r\n    {\r\n      path: PATHS.PROTECTEDPAGE,\r\n      element: user ? (\r\n        <ProtectedPage {...props} />\r\n      ) : (\r\n        <Navigate to={PATHS.LOGINPAGE} replace />\r\n      ),\r\n    },\r\n    {\r\n      path: PATHS.PRODUCTS,\r\n      element: <ProductPage {...props} />,\r\n    },\r\n    {\r\n      path: PATHS.PRODUCTDETAIL,\r\n      element: <ProductDetailPage {...props} />,\r\n    },\r\n    {\r\n      path: PATHS.SUBSCRIPTIONS,\r\n      element: <SubscriptionPage {...props} />,\r\n    },\r\n    {\r\n      path: PATHS.SUBSCRIPTIONDETAIL,\r\n      element: <SubscriptionDetailPage {...props} />,\r\n    },\r\n    {\r\n      path: PATHS.ORDERS,\r\n      element: <OrdersPage {...props} />,\r\n    },\r\n    {\r\n      path: PATHS.PROFILE,\r\n      element: <ProfilePage {...props} />,\r\n    },\r\n    {\r\n      path: PATHS.CHECKOUT,\r\n      element: <CheckoutPage {...props} />,\r\n    },\r\n\r\n  ];\r\n};\r\n\r\nexport default routes;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport LoadingComponent from \"./components/Loading\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport { getLoggedIn, logout } from \"./services/auth\";\r\nimport routes from \"./config/routes\";\r\nimport * as USER_HELPERS from \"./utils/userToken\";\r\nimport * as CONFIG from './config/config'\r\n\r\nimport { UserContext } from \"./context/UserContext\";\r\nimport { CheckoutContext } from \"./context/CheckoutContext\";\r\n\r\nexport default function App() {\r\n  const navigate = useNavigate()\r\n  const {user, setUser} = useContext(UserContext);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const accessToken = USER_HELPERS.getUserToken();\r\n    if (!accessToken) {\r\n      return setIsLoading(false);\r\n    }\r\n    getLoggedIn(accessToken).then((res) => {\r\n      if (!res.status) {\r\n        return setIsLoading(false);\r\n      }\r\n      setUser(res.data.user);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  // Check if signup stages are over\r\n  useEffect(() => {\r\n    if(user && user.signupStage < CONFIG.MAX_SIGNUP_STAGE) {\r\n      console.log(user.signupStage)\r\n      navigate('/signup/signup-information');\r\n    }  \r\n  }, [isLoading])\r\n\r\n  function handleLogout() {\r\n    const accessToken = USER_HELPERS.getUserToken();\r\n    \r\n    if (!accessToken) {\r\n      setUser(null);\r\n      navigate('/')\r\n      return setIsLoading(false);\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    \r\n    logout(accessToken).then((res) => {\r\n      if (!res.status) {\r\n        // deal with error here\r\n        console.error(\"Logout was unsuccessful: \", res);\r\n      }\r\n      USER_HELPERS.removeUserToken();\r\n      setIsLoading(false);\r\n      navigate('/')\r\n      return setUser(null);\r\n    });\r\n  }\r\n\r\n  function authenticate(user) {\r\n    setUser(user);\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <LoadingComponent />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <Navbar handleLogout={handleLogout} user={user} />\r\n        <div style={{marginTop: '100px'}}>\r\n        <Routes>\r\n          {routes({ user, authenticate, handleLogout }).map((route) => (\r\n            <Route key={route.path} path={route.path} element={route.element} />\r\n          ))}\r\n        </Routes>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { UserProvider } from \"./context/UserContext\";\r\nimport { CheckoutProvider } from \"./context/CheckoutContext\";\r\n\r\nconst theme = createTheme();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <ThemeProvider theme={theme}>\r\n        <UserProvider>\r\n          <CheckoutProvider>\r\n            <App />\r\n          </CheckoutProvider>\r\n        </UserProvider>\r\n      </ThemeProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}